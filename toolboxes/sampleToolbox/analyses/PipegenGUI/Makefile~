#
#    This makefile was generated by pipe-gen
#
#    Thursday, May 7 2015.
#    05:50 PM
#


# Define list of ID's
IDLIST = id0 id1 id2 id3 id4 id5

# Define list of setup subroutines
SETUPLIST = setup0 setup1 setup2 setup3 setup4 setup5

# Define input path
INPUT = /home/mstockma/pipe-gen/tempInput/

# Define output path
OUTPUT = /home/mstockma/pipe-gen/tempOutput/

# Define processing directory
PROCESSING = ./PROCESSING_DIRECTORY/

# Define error log directory
ERRORS = ./ERROR_LOG/

# Target all ID's for analysis
all: $(IDLIST)
.PHONY: all
.PHONY: $(IDLIST)

id0: id0_sink1
id1: id1_sink1
id2: id2_sink1
id3: id3_sink1
id4: id4_sink1
id5: id5_sink1

# Implement setup subroutines
.PHONY: setupall
setuperror: cleanerror
	mkdir -p $(ERRORS)

.PHONY: $(SETUPLIST)

setup0: setuperror
	mkdir -p $(PROCESSING)/0

setup1: setuperror
	mkdir -p $(PROCESSING)/1

setup2: setuperror
	mkdir -p $(PROCESSING)/2

setup3: setuperror
	mkdir -p $(PROCESSING)/3

setup4: setuperror
	mkdir -p $(PROCESSING)/4

setup5: setuperror
	mkdir -p $(PROCESSING)/5

#--------------------------------------------------------
# Dependency tree for id0_sink1 follows...
#    ID = 0
#    SINK = 1

.PHONY: id0_sink1

# ... visited SINK outputName, ID = 0
id0_sink1: setup0 id0_module0
	cp $(PROCESSING)0/0_0.txt $(OUTPUT)outputTextFile_1.txt

# ... visited MODULE, ID = 0
id0_module0: setup0 id0_source8
	cp $(INPUT)textFile_0.txt $(PROCESSING)0/0_0.txt

# ... visited SOURCE, ID = 0
.PHONY: id0_source8
id0_source8: $(INPUT)textFile_0.txt

# Dependency tree for id1_sink1 follows...
#    ID = 1
#    SINK = 1

.PHONY: id1_sink1

# ... visited SINK outputName, ID = 1
id1_sink1: setup1 id1_module0
	cp $(PROCESSING)1/0_0.txt $(OUTPUT)outputTextFile_0.txt

# ... visited MODULE, ID = 1
id1_module0: setup1 id1_source8
	cp $(INPUT)textFile_1.txt $(PROCESSING)1/0_0.txt

# ... visited SOURCE, ID = 1
.PHONY: id1_source8
id1_source8: $(INPUT)textFile_1.txt

# Dependency tree for id2_sink1 follows...
#    ID = 2
#    SINK = 1

.PHONY: id2_sink1

# ... visited SINK outputName, ID = 2
id2_sink1: setup2 id2_module0
	cp $(PROCESSING)2/0_0.txt $(OUTPUT)outputTextFile_2.txt

# ... visited MODULE, ID = 2
id2_module0: setup2 id2_source8
	cp $(INPUT)textFile_2.txt $(PROCESSING)2/0_0.txt

# ... visited SOURCE, ID = 2
.PHONY: id2_source8
id2_source8: $(INPUT)textFile_2.txt

# Dependency tree for id3_sink1 follows...
#    ID = 3
#    SINK = 1

.PHONY: id3_sink1

# ... visited SINK outputName, ID = 3
id3_sink1: setup3 id3_module0
	cp $(PROCESSING)3/0_0.txt $(OUTPUT)outputTextFile_3.txt

# ... visited MODULE, ID = 3
id3_module0: setup3 id3_source8
	cp $(INPUT)textFile_3.txt $(PROCESSING)3/0_0.txt

# ... visited SOURCE, ID = 3
.PHONY: id3_source8
id3_source8: $(INPUT)textFile_3.txt

# Dependency tree for id4_sink1 follows...
#    ID = 4
#    SINK = 1

.PHONY: id4_sink1

# ... visited SINK outputName, ID = 4
id4_sink1: setup4 id4_module0
	cp $(PROCESSING)4/0_0.txt $(OUTPUT)outputTextFile_4.txt

# ... visited MODULE, ID = 4
id4_module0: setup4 id4_source8
	cp $(INPUT)textFile_4.txt $(PROCESSING)4/0_0.txt

# ... visited SOURCE, ID = 4
.PHONY: id4_source8
id4_source8: $(INPUT)textFile_4.txt

# Dependency tree for id5_sink1 follows...
#    ID = 5
#    SINK = 1

.PHONY: id5_sink1

# ... visited SINK outputName, ID = 5
id5_sink1: setup5 id5_module0
	cp $(PROCESSING)5/0_0.txt $(OUTPUT)outputTextFile_5.txt

# ... visited MODULE, ID = 5
id5_module0: setup5 id5_source8
	cp $(INPUT)textFile_5.txt $(PROCESSING)5/0_0.txt

# ... visited SOURCE, ID = 5
.PHONY: id5_source8
id5_source8: $(INPUT)textFile_5.txt

#--------------------------------------------------------

# Declare cleaning targets
.PHONY: cleanall cleanerror cleanprocess

cleanall: cleanerror cleanprocess

cleanerror:
	rm -f $(ERRORS)* 

cleanprocess:
	rm -f $(PROCESSING)*/* 

