#
#    This makefile was generated by pipe-gen
#
#    Wednesday, August 26 2015.
#    10:44 AM
#


# Define list of ID's
IDLIST = id001 id002 id003 id004 id005 id006 id007 id008 id009 id010

# Define list of setup subroutines
SETUPLIST = setup001 setup002 setup003 setup004 setup005 setup006 setup007 setup008 setup009 setup010

# Define processing directory
PROCESSING = ./PROCESSING_DIRECTORY/

# Define error log directory
ERRORS = ./ERROR_LOGS/

# Target all ID's for analysis
all: $(IDLIST)
.PHONY: all
.PHONY: $(IDLIST)

id001: id001_sink0 id001_sink1 id001_sink2 id001_sink3 id001_sink4 id001_sink5 id001_sink6 id001_sink7 id001_sink8 id001_sink9 id001_sink12 id001_sink13 id001_sink14 id001_sink15 id001_sink16 id001_sink17 id001_sink18 id001_sink19 
id002: id002_sink0 id002_sink1 id002_sink2 id002_sink3 id002_sink4 id002_sink5 id002_sink6 id002_sink7 id002_sink8 id002_sink9 id002_sink12 id002_sink13 id002_sink14 id002_sink15 id002_sink16 id002_sink17 id002_sink18 id002_sink19 
id003: id003_sink0 id003_sink1 id003_sink2 id003_sink3 id003_sink4 id003_sink5 id003_sink6 id003_sink7 id003_sink8 id003_sink9 id003_sink12 id003_sink13 id003_sink14 id003_sink15 id003_sink16 id003_sink17 id003_sink18 id003_sink19 
id004: id004_sink0 id004_sink1 id004_sink2 id004_sink3 id004_sink4 id004_sink5 id004_sink6 id004_sink7 id004_sink8 id004_sink9 id004_sink12 id004_sink13 id004_sink14 id004_sink15 id004_sink16 id004_sink17 id004_sink18 id004_sink19 
id005: id005_sink0 id005_sink1 id005_sink2 id005_sink3 id005_sink4 id005_sink5 id005_sink6 id005_sink7 id005_sink8 id005_sink9 id005_sink12 id005_sink13 id005_sink14 id005_sink15 id005_sink16 id005_sink17 id005_sink18 id005_sink19 
id006: id006_sink0 id006_sink1 id006_sink2 id006_sink3 id006_sink4 id006_sink5 id006_sink6 id006_sink7 id006_sink8 id006_sink9 id006_sink12 id006_sink13 id006_sink14 id006_sink15 id006_sink16 id006_sink17 id006_sink18 id006_sink19 
id007: id007_sink0 id007_sink1 id007_sink2 id007_sink3 id007_sink4 id007_sink5 id007_sink6 id007_sink7 id007_sink8 id007_sink9 id007_sink12 id007_sink13 id007_sink14 id007_sink15 id007_sink16 id007_sink17 id007_sink18 id007_sink19 
id008: id008_sink0 id008_sink1 id008_sink2 id008_sink3 id008_sink4 id008_sink5 id008_sink6 id008_sink7 id008_sink8 id008_sink9 id008_sink12 id008_sink13 id008_sink14 id008_sink15 id008_sink16 id008_sink17 id008_sink18 id008_sink19 
id009: id009_sink0 id009_sink1 id009_sink2 id009_sink3 id009_sink4 id009_sink5 id009_sink6 id009_sink7 id009_sink8 id009_sink9 id009_sink12 id009_sink13 id009_sink14 id009_sink15 id009_sink16 id009_sink17 id009_sink18 id009_sink19 
id010: id010_sink0 id010_sink1 id010_sink2 id010_sink3 id010_sink4 id010_sink5 id010_sink6 id010_sink7 id010_sink8 id010_sink9 id010_sink12 id010_sink13 id010_sink14 id010_sink15 id010_sink16 id010_sink17 id010_sink18 id010_sink19 

# ID specific makefile variables
id001_DATA = ~/dtiFitDummy/data/subject001/

id002_DATA = ~/dtiFitDummy/data/subject002/

id003_DATA = ~/dtiFitDummy/data/subject003/

id004_DATA = ~/dtiFitDummy/data/subject004/

id005_DATA = ~/dtiFitDummy/data/subject005/

id006_DATA = ~/dtiFitDummy/data/subject006/

id007_DATA = ~/dtiFitDummy/data/subject007/

id008_DATA = ~/dtiFitDummy/data/subject008/

id009_DATA = ~/dtiFitDummy/data/subject009/

id010_DATA = ~/dtiFitDummy/data/subject010/

#--------------------------------    SETUP TARGETS    ----------------------------------

# Implement setup subroutines
.PHONY: setupall
setupall: $(SETUPLIST)

setuperror: cleanerror
	mkdir -p $(ERRORS)

.PHONY: $(SETUPLIST)

setup001: setuperror
	mkdir -p $(PROCESSING)/001

setup002: setuperror
	mkdir -p $(PROCESSING)/002

setup003: setuperror
	mkdir -p $(PROCESSING)/003

setup004: setuperror
	mkdir -p $(PROCESSING)/004

setup005: setuperror
	mkdir -p $(PROCESSING)/005

setup006: setuperror
	mkdir -p $(PROCESSING)/006

setup007: setuperror
	mkdir -p $(PROCESSING)/007

setup008: setuperror
	mkdir -p $(PROCESSING)/008

setup009: setuperror
	mkdir -p $(PROCESSING)/009

setup010: setuperror
	mkdir -p $(PROCESSING)/010

#-----------------------------------    MAKE ALL    ------------------------------------

# Dependency tree for id001_sink0 below
#    ID   = 001
#    SINK = 0

#    visit to sink = FA, id = 001
.PHONEY: id001_sink0
id001_sink0: $(PROCESSING)001/3_0.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	date && cp $(PROCESSING)001/3_0.nii.gz $(id001_DATA)results/FA.nii.gz && date
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

#    visit to module = dtiFit, id = 001
 %/001/3_0.nii.gz %/001/3_1.nii.gz %/001/3_2.nii.gz %/001/3_3.nii.gz %/001/3_4.nii.gz %/001/3_5.nii.gz %/001/3_6.nii.gz %/001/3_7.nii.gz %/001/3_8.nii.gz %/001/3_9.nii.gz: %/001/3_in0.nii.gz %/001/3_in1.nii.gz %/001/3_in2.txt %/001/3_in3.txt
	~/dtiFitDummy/scripts/dtiFit.script $(PROCESSING)001/3_0.nii.gz $(PROCESSING)001/3_1.nii.gz $(PROCESSING)001/3_2.nii.gz $(PROCESSING)001/3_3.nii.gz $(PROCESSING)001/3_4.nii.gz $(PROCESSING)001/3_5.nii.gz $(PROCESSING)001/3_6.nii.gz $(PROCESSING)001/3_7.nii.gz $(PROCESSING)001/3_8.nii.gz $(PROCESSING)001/3_9.nii.gz $(id001_DATA)DTI_image.nii.gz $(PROCESSING)001/4_0.nii.gz $(PROCESSING)001/1_0.txt $(PROCESSING)001/2_0.txt

$(PROCESSING)001/3_in0.nii.gz: $(id001_DATA)DTI_image.nii.gz
	 ln -sf $(id001_DATA)DTI_image.nii.gz $(PROCESSING)001/3_in0.nii.gz

$(PROCESSING)001/3_in1.nii.gz: $(PROCESSING)001/4_0.nii.gz
	 ln -sf ../../$(PROCESSING)001/4_0.nii.gz $(PROCESSING)001/3_in1.nii.gz

$(PROCESSING)001/3_in2.txt: $(PROCESSING)001/1_0.txt
	 ln -sf ../../$(PROCESSING)001/1_0.txt $(PROCESSING)001/3_in2.txt

$(PROCESSING)001/3_in3.txt: $(PROCESSING)001/2_0.txt
	 ln -sf ../../$(PROCESSING)001/2_0.txt $(PROCESSING)001/3_in3.txt

#    visit to module = compressNifti, id = 001
$(PROCESSING)001/4_0.nii.gz: $(id001_DATA)mask_image.nii
	~/dtiFitDummy/scripts/compressNifti.script $(PROCESSING)001/4_0.nii.gz $(id001_DATA)mask_image.nii

#    visit to module = getBvals, id = 001
$(PROCESSING)001/1_0.txt: $(id001_DATA)procpar
	~/dtiFitDummy/scripts/getBvals.script $(PROCESSING)001/1_0.txt $(id001_DATA)procpar

#    visit to module = getBvecs, id = 001
$(PROCESSING)001/2_0.txt: $(id001_DATA)procpar
	~/dtiFitDummy/scripts/getBvecs.script $(PROCESSING)001/2_0.txt $(id001_DATA)procpar

# Dependency tree for id002_sink0 below
#    ID   = 002
#    SINK = 0

#    visit to sink = FA, id = 002
.PHONEY: id002_sink0
id002_sink0: $(PROCESSING)002/3_0.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	date; cp $(PROCESSING)002/3_0.nii.gz $(id002_DATA)results/FA.nii.gz; date
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

#    visit to module = dtiFit, id = 002
 %/002/3_0.nii.gz %/002/3_1.nii.gz %/002/3_2.nii.gz %/002/3_3.nii.gz %/002/3_4.nii.gz %/002/3_5.nii.gz %/002/3_6.nii.gz %/002/3_7.nii.gz %/002/3_8.nii.gz %/002/3_9.nii.gz: %/002/3_in0.nii.gz %/002/3_in1.nii.gz %/002/3_in2.txt %/002/3_in3.txt
	~/dtiFitDummy/scripts/dtiFit.script $(PROCESSING)002/3_0.nii.gz $(PROCESSING)002/3_1.nii.gz $(PROCESSING)002/3_2.nii.gz $(PROCESSING)002/3_3.nii.gz $(PROCESSING)002/3_4.nii.gz $(PROCESSING)002/3_5.nii.gz $(PROCESSING)002/3_6.nii.gz $(PROCESSING)002/3_7.nii.gz $(PROCESSING)002/3_8.nii.gz $(PROCESSING)002/3_9.nii.gz $(id002_DATA)DTI_image.nii.gz $(PROCESSING)002/4_0.nii.gz $(PROCESSING)002/1_0.txt $(PROCESSING)002/2_0.txt

$(PROCESSING)002/3_in0.nii.gz: $(id002_DATA)DTI_image.nii.gz
	 ln -sf $(id002_DATA)DTI_image.nii.gz $(PROCESSING)002/3_in0.nii.gz

$(PROCESSING)002/3_in1.nii.gz: $(PROCESSING)002/4_0.nii.gz
	 ln -sf ../../$(PROCESSING)002/4_0.nii.gz $(PROCESSING)002/3_in1.nii.gz

$(PROCESSING)002/3_in2.txt: $(PROCESSING)002/1_0.txt
	 ln -sf ../../$(PROCESSING)002/1_0.txt $(PROCESSING)002/3_in2.txt

$(PROCESSING)002/3_in3.txt: $(PROCESSING)002/2_0.txt
	 ln -sf ../../$(PROCESSING)002/2_0.txt $(PROCESSING)002/3_in3.txt

#    visit to module = compressNifti, id = 002
$(PROCESSING)002/4_0.nii.gz: $(id002_DATA)mask_image.nii
	~/dtiFitDummy/scripts/compressNifti.script $(PROCESSING)002/4_0.nii.gz $(id002_DATA)mask_image.nii

#    visit to module = getBvals, id = 002
$(PROCESSING)002/1_0.txt: $(id002_DATA)procpar
	~/dtiFitDummy/scripts/getBvals.script $(PROCESSING)002/1_0.txt $(id002_DATA)procpar

#    visit to module = getBvecs, id = 002
$(PROCESSING)002/2_0.txt: $(id002_DATA)procpar
	~/dtiFitDummy/scripts/getBvecs.script $(PROCESSING)002/2_0.txt $(id002_DATA)procpar

# Dependency tree for id003_sink0 below
#    ID   = 003
#    SINK = 0

#    visit to sink = FA, id = 003
.PHONEY: id003_sink0
id003_sink0: $(PROCESSING)003/3_0.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	date; cp $(PROCESSING)003/3_0.nii.gz $(id003_DATA)results/FA.nii.gz; date
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

#    visit to module = dtiFit, id = 003
 %/003/3_0.nii.gz %/003/3_1.nii.gz %/003/3_2.nii.gz %/003/3_3.nii.gz %/003/3_4.nii.gz %/003/3_5.nii.gz %/003/3_6.nii.gz %/003/3_7.nii.gz %/003/3_8.nii.gz %/003/3_9.nii.gz: %/003/3_in0.nii.gz %/003/3_in1.nii.gz %/003/3_in2.txt %/003/3_in3.txt
	~/dtiFitDummy/scripts/dtiFit.script $(PROCESSING)003/3_0.nii.gz $(PROCESSING)003/3_1.nii.gz $(PROCESSING)003/3_2.nii.gz $(PROCESSING)003/3_3.nii.gz $(PROCESSING)003/3_4.nii.gz $(PROCESSING)003/3_5.nii.gz $(PROCESSING)003/3_6.nii.gz $(PROCESSING)003/3_7.nii.gz $(PROCESSING)003/3_8.nii.gz $(PROCESSING)003/3_9.nii.gz $(id003_DATA)DTI_image.nii.gz $(PROCESSING)003/4_0.nii.gz $(PROCESSING)003/1_0.txt $(PROCESSING)003/2_0.txt

$(PROCESSING)003/3_in0.nii.gz: $(id003_DATA)DTI_image.nii.gz
	 ln -sf $(id003_DATA)DTI_image.nii.gz $(PROCESSING)003/3_in0.nii.gz

$(PROCESSING)003/3_in1.nii.gz: $(PROCESSING)003/4_0.nii.gz
	 ln -sf ../../$(PROCESSING)003/4_0.nii.gz $(PROCESSING)003/3_in1.nii.gz

$(PROCESSING)003/3_in2.txt: $(PROCESSING)003/1_0.txt
	 ln -sf ../../$(PROCESSING)003/1_0.txt $(PROCESSING)003/3_in2.txt

$(PROCESSING)003/3_in3.txt: $(PROCESSING)003/2_0.txt
	 ln -sf ../../$(PROCESSING)003/2_0.txt $(PROCESSING)003/3_in3.txt

#    visit to module = compressNifti, id = 003
$(PROCESSING)003/4_0.nii.gz: $(id003_DATA)mask_image.nii
	~/dtiFitDummy/scripts/compressNifti.script $(PROCESSING)003/4_0.nii.gz $(id003_DATA)mask_image.nii

#    visit to module = getBvals, id = 003
$(PROCESSING)003/1_0.txt: $(id003_DATA)procpar
	~/dtiFitDummy/scripts/getBvals.script $(PROCESSING)003/1_0.txt $(id003_DATA)procpar

#    visit to module = getBvecs, id = 003
$(PROCESSING)003/2_0.txt: $(id003_DATA)procpar
	~/dtiFitDummy/scripts/getBvecs.script $(PROCESSING)003/2_0.txt $(id003_DATA)procpar

# Dependency tree for id004_sink0 below
#    ID   = 004
#    SINK = 0

#    visit to sink = FA, id = 004
.PHONEY: id004_sink0
id004_sink0: $(PROCESSING)004/3_0.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	date; cp $(PROCESSING)004/3_0.nii.gz $(id004_DATA)results/FA.nii.gz; date
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

#    visit to module = dtiFit, id = 004
 %/004/3_0.nii.gz %/004/3_1.nii.gz %/004/3_2.nii.gz %/004/3_3.nii.gz %/004/3_4.nii.gz %/004/3_5.nii.gz %/004/3_6.nii.gz %/004/3_7.nii.gz %/004/3_8.nii.gz %/004/3_9.nii.gz: %/004/3_in0.nii.gz %/004/3_in1.nii.gz %/004/3_in2.txt %/004/3_in3.txt
	~/dtiFitDummy/scripts/dtiFit.script $(PROCESSING)004/3_0.nii.gz $(PROCESSING)004/3_1.nii.gz $(PROCESSING)004/3_2.nii.gz $(PROCESSING)004/3_3.nii.gz $(PROCESSING)004/3_4.nii.gz $(PROCESSING)004/3_5.nii.gz $(PROCESSING)004/3_6.nii.gz $(PROCESSING)004/3_7.nii.gz $(PROCESSING)004/3_8.nii.gz $(PROCESSING)004/3_9.nii.gz $(id004_DATA)DTI_image.nii.gz $(PROCESSING)004/4_0.nii.gz $(PROCESSING)004/1_0.txt $(PROCESSING)004/2_0.txt

$(PROCESSING)004/3_in0.nii.gz: $(id004_DATA)DTI_image.nii.gz
	 ln -sf $(id004_DATA)DTI_image.nii.gz $(PROCESSING)004/3_in0.nii.gz

$(PROCESSING)004/3_in1.nii.gz: $(PROCESSING)004/4_0.nii.gz
	 ln -sf ../../$(PROCESSING)004/4_0.nii.gz $(PROCESSING)004/3_in1.nii.gz

$(PROCESSING)004/3_in2.txt: $(PROCESSING)004/1_0.txt
	 ln -sf ../../$(PROCESSING)004/1_0.txt $(PROCESSING)004/3_in2.txt

$(PROCESSING)004/3_in3.txt: $(PROCESSING)004/2_0.txt
	 ln -sf ../../$(PROCESSING)004/2_0.txt $(PROCESSING)004/3_in3.txt

#    visit to module = compressNifti, id = 004
$(PROCESSING)004/4_0.nii.gz: $(id004_DATA)mask_image.nii
	~/dtiFitDummy/scripts/compressNifti.script $(PROCESSING)004/4_0.nii.gz $(id004_DATA)mask_image.nii

#    visit to module = getBvals, id = 004
$(PROCESSING)004/1_0.txt: $(id004_DATA)procpar
	~/dtiFitDummy/scripts/getBvals.script $(PROCESSING)004/1_0.txt $(id004_DATA)procpar

#    visit to module = getBvecs, id = 004
$(PROCESSING)004/2_0.txt: $(id004_DATA)procpar
	~/dtiFitDummy/scripts/getBvecs.script $(PROCESSING)004/2_0.txt $(id004_DATA)procpar

# Dependency tree for id005_sink0 below
#    ID   = 005
#    SINK = 0

#    visit to sink = FA, id = 005
.PHONEY: id005_sink0
id005_sink0: $(PROCESSING)005/3_0.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	date; cp $(PROCESSING)005/3_0.nii.gz $(id005_DATA)results/FA.nii.gz; date
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

#    visit to module = dtiFit, id = 005
 %/005/3_0.nii.gz %/005/3_1.nii.gz %/005/3_2.nii.gz %/005/3_3.nii.gz %/005/3_4.nii.gz %/005/3_5.nii.gz %/005/3_6.nii.gz %/005/3_7.nii.gz %/005/3_8.nii.gz %/005/3_9.nii.gz: %/005/3_in0.nii.gz %/005/3_in1.nii.gz %/005/3_in2.txt %/005/3_in3.txt
	~/dtiFitDummy/scripts/dtiFit.script $(PROCESSING)005/3_0.nii.gz $(PROCESSING)005/3_1.nii.gz $(PROCESSING)005/3_2.nii.gz $(PROCESSING)005/3_3.nii.gz $(PROCESSING)005/3_4.nii.gz $(PROCESSING)005/3_5.nii.gz $(PROCESSING)005/3_6.nii.gz $(PROCESSING)005/3_7.nii.gz $(PROCESSING)005/3_8.nii.gz $(PROCESSING)005/3_9.nii.gz $(id005_DATA)DTI_image.nii.gz $(PROCESSING)005/4_0.nii.gz $(PROCESSING)005/1_0.txt $(PROCESSING)005/2_0.txt

$(PROCESSING)005/3_in0.nii.gz: $(id005_DATA)DTI_image.nii.gz
	 ln -sf $(id005_DATA)DTI_image.nii.gz $(PROCESSING)005/3_in0.nii.gz

$(PROCESSING)005/3_in1.nii.gz: $(PROCESSING)005/4_0.nii.gz
	 ln -sf ../../$(PROCESSING)005/4_0.nii.gz $(PROCESSING)005/3_in1.nii.gz

$(PROCESSING)005/3_in2.txt: $(PROCESSING)005/1_0.txt
	 ln -sf ../../$(PROCESSING)005/1_0.txt $(PROCESSING)005/3_in2.txt

$(PROCESSING)005/3_in3.txt: $(PROCESSING)005/2_0.txt
	 ln -sf ../../$(PROCESSING)005/2_0.txt $(PROCESSING)005/3_in3.txt

#    visit to module = compressNifti, id = 005
$(PROCESSING)005/4_0.nii.gz: $(id005_DATA)mask_image.nii
	~/dtiFitDummy/scripts/compressNifti.script $(PROCESSING)005/4_0.nii.gz $(id005_DATA)mask_image.nii

#    visit to module = getBvals, id = 005
$(PROCESSING)005/1_0.txt: $(id005_DATA)procpar
	~/dtiFitDummy/scripts/getBvals.script $(PROCESSING)005/1_0.txt $(id005_DATA)procpar

#    visit to module = getBvecs, id = 005
$(PROCESSING)005/2_0.txt: $(id005_DATA)procpar
	~/dtiFitDummy/scripts/getBvecs.script $(PROCESSING)005/2_0.txt $(id005_DATA)procpar

# Dependency tree for id006_sink0 below
#    ID   = 006
#    SINK = 0

#    visit to sink = FA, id = 006
.PHONEY: id006_sink0
id006_sink0: $(PROCESSING)006/3_0.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	date; cp $(PROCESSING)006/3_0.nii.gz $(id006_DATA)results/FA.nii.gz; date 
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

#    visit to module = dtiFit, id = 006
 %/006/3_0.nii.gz %/006/3_1.nii.gz %/006/3_2.nii.gz %/006/3_3.nii.gz %/006/3_4.nii.gz %/006/3_5.nii.gz %/006/3_6.nii.gz %/006/3_7.nii.gz %/006/3_8.nii.gz %/006/3_9.nii.gz: %/006/3_in0.nii.gz %/006/3_in1.nii.gz %/006/3_in2.txt %/006/3_in3.txt
	~/dtiFitDummy/scripts/dtiFit.script $(PROCESSING)006/3_0.nii.gz $(PROCESSING)006/3_1.nii.gz $(PROCESSING)006/3_2.nii.gz $(PROCESSING)006/3_3.nii.gz $(PROCESSING)006/3_4.nii.gz $(PROCESSING)006/3_5.nii.gz $(PROCESSING)006/3_6.nii.gz $(PROCESSING)006/3_7.nii.gz $(PROCESSING)006/3_8.nii.gz $(PROCESSING)006/3_9.nii.gz $(id006_DATA)DTI_image.nii.gz $(PROCESSING)006/4_0.nii.gz $(PROCESSING)006/1_0.txt $(PROCESSING)006/2_0.txt

$(PROCESSING)006/3_in0.nii.gz: $(id006_DATA)DTI_image.nii.gz
	 ln -sf $(id006_DATA)DTI_image.nii.gz $(PROCESSING)006/3_in0.nii.gz

$(PROCESSING)006/3_in1.nii.gz: $(PROCESSING)006/4_0.nii.gz
	 ln -sf ../../$(PROCESSING)006/4_0.nii.gz $(PROCESSING)006/3_in1.nii.gz

$(PROCESSING)006/3_in2.txt: $(PROCESSING)006/1_0.txt
	 ln -sf ../../$(PROCESSING)006/1_0.txt $(PROCESSING)006/3_in2.txt

$(PROCESSING)006/3_in3.txt: $(PROCESSING)006/2_0.txt
	 ln -sf ../../$(PROCESSING)006/2_0.txt $(PROCESSING)006/3_in3.txt

#    visit to module = compressNifti, id = 006
$(PROCESSING)006/4_0.nii.gz: $(id006_DATA)mask_image.nii
	~/dtiFitDummy/scripts/compressNifti.script $(PROCESSING)006/4_0.nii.gz $(id006_DATA)mask_image.nii

#    visit to module = getBvals, id = 006
$(PROCESSING)006/1_0.txt: $(id006_DATA)procpar
	~/dtiFitDummy/scripts/getBvals.script $(PROCESSING)006/1_0.txt $(id006_DATA)procpar

#    visit to module = getBvecs, id = 006
$(PROCESSING)006/2_0.txt: $(id006_DATA)procpar
	~/dtiFitDummy/scripts/getBvecs.script $(PROCESSING)006/2_0.txt $(id006_DATA)procpar

# Dependency tree for id007_sink0 below
#    ID   = 007
#    SINK = 0

#    visit to sink = FA, id = 007
.PHONEY: id007_sink0
id007_sink0: $(PROCESSING)007/3_0.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	date; cp $(PROCESSING)007/3_0.nii.gz $(id007_DATA)results/FA.nii.gz; date
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

#    visit to module = dtiFit, id = 007
 %/007/3_0.nii.gz %/007/3_1.nii.gz %/007/3_2.nii.gz %/007/3_3.nii.gz %/007/3_4.nii.gz %/007/3_5.nii.gz %/007/3_6.nii.gz %/007/3_7.nii.gz %/007/3_8.nii.gz %/007/3_9.nii.gz: %/007/3_in0.nii.gz %/007/3_in1.nii.gz %/007/3_in2.txt %/007/3_in3.txt
	~/dtiFitDummy/scripts/dtiFit.script $(PROCESSING)007/3_0.nii.gz $(PROCESSING)007/3_1.nii.gz $(PROCESSING)007/3_2.nii.gz $(PROCESSING)007/3_3.nii.gz $(PROCESSING)007/3_4.nii.gz $(PROCESSING)007/3_5.nii.gz $(PROCESSING)007/3_6.nii.gz $(PROCESSING)007/3_7.nii.gz $(PROCESSING)007/3_8.nii.gz $(PROCESSING)007/3_9.nii.gz $(id007_DATA)DTI_image.nii.gz $(PROCESSING)007/4_0.nii.gz $(PROCESSING)007/1_0.txt $(PROCESSING)007/2_0.txt

$(PROCESSING)007/3_in0.nii.gz: $(id007_DATA)DTI_image.nii.gz
	 ln -sf $(id007_DATA)DTI_image.nii.gz $(PROCESSING)007/3_in0.nii.gz

$(PROCESSING)007/3_in1.nii.gz: $(PROCESSING)007/4_0.nii.gz
	 ln -sf ../../$(PROCESSING)007/4_0.nii.gz $(PROCESSING)007/3_in1.nii.gz

$(PROCESSING)007/3_in2.txt: $(PROCESSING)007/1_0.txt
	 ln -sf ../../$(PROCESSING)007/1_0.txt $(PROCESSING)007/3_in2.txt

$(PROCESSING)007/3_in3.txt: $(PROCESSING)007/2_0.txt
	 ln -sf ../../$(PROCESSING)007/2_0.txt $(PROCESSING)007/3_in3.txt

#    visit to module = compressNifti, id = 007
$(PROCESSING)007/4_0.nii.gz: $(id007_DATA)mask_image.nii
	~/dtiFitDummy/scripts/compressNifti.script $(PROCESSING)007/4_0.nii.gz $(id007_DATA)mask_image.nii

#    visit to module = getBvals, id = 007
$(PROCESSING)007/1_0.txt: $(id007_DATA)procpar
	~/dtiFitDummy/scripts/getBvals.script $(PROCESSING)007/1_0.txt $(id007_DATA)procpar

#    visit to module = getBvecs, id = 007
$(PROCESSING)007/2_0.txt: $(id007_DATA)procpar
	~/dtiFitDummy/scripts/getBvecs.script $(PROCESSING)007/2_0.txt $(id007_DATA)procpar

# Dependency tree for id008_sink0 below
#    ID   = 008
#    SINK = 0

#    visit to sink = FA, id = 008
.PHONEY: id008_sink0
id008_sink0: $(PROCESSING)008/3_0.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	date; cp $(PROCESSING)008/3_0.nii.gz $(id008_DATA)results/FA.nii.gz; date
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

#    visit to module = dtiFit, id = 008
 %/008/3_0.nii.gz %/008/3_1.nii.gz %/008/3_2.nii.gz %/008/3_3.nii.gz %/008/3_4.nii.gz %/008/3_5.nii.gz %/008/3_6.nii.gz %/008/3_7.nii.gz %/008/3_8.nii.gz %/008/3_9.nii.gz: %/008/3_in0.nii.gz %/008/3_in1.nii.gz %/008/3_in2.txt %/008/3_in3.txt
	~/dtiFitDummy/scripts/dtiFit.script $(PROCESSING)008/3_0.nii.gz $(PROCESSING)008/3_1.nii.gz $(PROCESSING)008/3_2.nii.gz $(PROCESSING)008/3_3.nii.gz $(PROCESSING)008/3_4.nii.gz $(PROCESSING)008/3_5.nii.gz $(PROCESSING)008/3_6.nii.gz $(PROCESSING)008/3_7.nii.gz $(PROCESSING)008/3_8.nii.gz $(PROCESSING)008/3_9.nii.gz $(id008_DATA)DTI_image.nii.gz $(PROCESSING)008/4_0.nii.gz $(PROCESSING)008/1_0.txt $(PROCESSING)008/2_0.txt

$(PROCESSING)008/3_in0.nii.gz: $(id008_DATA)DTI_image.nii.gz
	 ln -sf $(id008_DATA)DTI_image.nii.gz $(PROCESSING)008/3_in0.nii.gz

$(PROCESSING)008/3_in1.nii.gz: $(PROCESSING)008/4_0.nii.gz
	 ln -sf ../../$(PROCESSING)008/4_0.nii.gz $(PROCESSING)008/3_in1.nii.gz

$(PROCESSING)008/3_in2.txt: $(PROCESSING)008/1_0.txt
	 ln -sf ../../$(PROCESSING)008/1_0.txt $(PROCESSING)008/3_in2.txt

$(PROCESSING)008/3_in3.txt: $(PROCESSING)008/2_0.txt
	 ln -sf ../../$(PROCESSING)008/2_0.txt $(PROCESSING)008/3_in3.txt

#    visit to module = compressNifti, id = 008
$(PROCESSING)008/4_0.nii.gz: $(id008_DATA)mask_image.nii
	~/dtiFitDummy/scripts/compressNifti.script $(PROCESSING)008/4_0.nii.gz $(id008_DATA)mask_image.nii

#    visit to module = getBvals, id = 008
$(PROCESSING)008/1_0.txt: $(id008_DATA)procpar
	~/dtiFitDummy/scripts/getBvals.script $(PROCESSING)008/1_0.txt $(id008_DATA)procpar

#    visit to module = getBvecs, id = 008
$(PROCESSING)008/2_0.txt: $(id008_DATA)procpar
	~/dtiFitDummy/scripts/getBvecs.script $(PROCESSING)008/2_0.txt $(id008_DATA)procpar

# Dependency tree for id009_sink0 below
#    ID   = 009
#    SINK = 0

#    visit to sink = FA, id = 009
.PHONEY: id009_sink0
id009_sink0: $(PROCESSING)009/3_0.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	date; cp $(PROCESSING)009/3_0.nii.gz $(id009_DATA)results/FA.nii.gz; date
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

#    visit to module = dtiFit, id = 009
 %/009/3_0.nii.gz %/009/3_1.nii.gz %/009/3_2.nii.gz %/009/3_3.nii.gz %/009/3_4.nii.gz %/009/3_5.nii.gz %/009/3_6.nii.gz %/009/3_7.nii.gz %/009/3_8.nii.gz %/009/3_9.nii.gz: %/009/3_in0.nii.gz %/009/3_in1.nii.gz %/009/3_in2.txt %/009/3_in3.txt
	~/dtiFitDummy/scripts/dtiFit.script $(PROCESSING)009/3_0.nii.gz $(PROCESSING)009/3_1.nii.gz $(PROCESSING)009/3_2.nii.gz $(PROCESSING)009/3_3.nii.gz $(PROCESSING)009/3_4.nii.gz $(PROCESSING)009/3_5.nii.gz $(PROCESSING)009/3_6.nii.gz $(PROCESSING)009/3_7.nii.gz $(PROCESSING)009/3_8.nii.gz $(PROCESSING)009/3_9.nii.gz $(id009_DATA)DTI_image.nii.gz $(PROCESSING)009/4_0.nii.gz $(PROCESSING)009/1_0.txt $(PROCESSING)009/2_0.txt

$(PROCESSING)009/3_in0.nii.gz: $(id009_DATA)DTI_image.nii.gz
	 ln -sf $(id009_DATA)DTI_image.nii.gz $(PROCESSING)009/3_in0.nii.gz

$(PROCESSING)009/3_in1.nii.gz: $(PROCESSING)009/4_0.nii.gz
	 ln -sf ../../$(PROCESSING)009/4_0.nii.gz $(PROCESSING)009/3_in1.nii.gz

$(PROCESSING)009/3_in2.txt: $(PROCESSING)009/1_0.txt
	 ln -sf ../../$(PROCESSING)009/1_0.txt $(PROCESSING)009/3_in2.txt

$(PROCESSING)009/3_in3.txt: $(PROCESSING)009/2_0.txt
	 ln -sf ../../$(PROCESSING)009/2_0.txt $(PROCESSING)009/3_in3.txt

#    visit to module = compressNifti, id = 009
$(PROCESSING)009/4_0.nii.gz: $(id009_DATA)mask_image.nii
	~/dtiFitDummy/scripts/compressNifti.script $(PROCESSING)009/4_0.nii.gz $(id009_DATA)mask_image.nii

#    visit to module = getBvals, id = 009
$(PROCESSING)009/1_0.txt: $(id009_DATA)procpar
	~/dtiFitDummy/scripts/getBvals.script $(PROCESSING)009/1_0.txt $(id009_DATA)procpar

#    visit to module = getBvecs, id = 009
$(PROCESSING)009/2_0.txt: $(id009_DATA)procpar
	~/dtiFitDummy/scripts/getBvecs.script $(PROCESSING)009/2_0.txt $(id009_DATA)procpar

# Dependency tree for id010_sink0 below
#    ID   = 010
#    SINK = 0

#    visit to sink = FA, id = 010
.PHONEY: id010_sink0
id010_sink0: $(PROCESSING)010/3_0.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	date; cp $(PROCESSING)010/3_0.nii.gz $(id010_DATA)results/FA.nii.gz; date
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

#    visit to module = dtiFit, id = 010
 %/010/3_0.nii.gz %/010/3_1.nii.gz %/010/3_2.nii.gz %/010/3_3.nii.gz %/010/3_4.nii.gz %/010/3_5.nii.gz %/010/3_6.nii.gz %/010/3_7.nii.gz %/010/3_8.nii.gz %/010/3_9.nii.gz: %/010/3_in0.nii.gz %/010/3_in1.nii.gz %/010/3_in2.txt %/010/3_in3.txt
	~/dtiFitDummy/scripts/dtiFit.script $(PROCESSING)010/3_0.nii.gz $(PROCESSING)010/3_1.nii.gz $(PROCESSING)010/3_2.nii.gz $(PROCESSING)010/3_3.nii.gz $(PROCESSING)010/3_4.nii.gz $(PROCESSING)010/3_5.nii.gz $(PROCESSING)010/3_6.nii.gz $(PROCESSING)010/3_7.nii.gz $(PROCESSING)010/3_8.nii.gz $(PROCESSING)010/3_9.nii.gz $(id010_DATA)DTI_image.nii.gz $(PROCESSING)010/4_0.nii.gz $(PROCESSING)010/1_0.txt $(PROCESSING)010/2_0.txt

$(PROCESSING)010/3_in0.nii.gz: $(id010_DATA)DTI_image.nii.gz
	 ln -sf $(id010_DATA)DTI_image.nii.gz $(PROCESSING)010/3_in0.nii.gz

$(PROCESSING)010/3_in1.nii.gz: $(PROCESSING)010/4_0.nii.gz
	 ln -sf ../../$(PROCESSING)010/4_0.nii.gz $(PROCESSING)010/3_in1.nii.gz

$(PROCESSING)010/3_in2.txt: $(PROCESSING)010/1_0.txt
	 ln -sf ../../$(PROCESSING)010/1_0.txt $(PROCESSING)010/3_in2.txt

$(PROCESSING)010/3_in3.txt: $(PROCESSING)010/2_0.txt
	 ln -sf ../../$(PROCESSING)010/2_0.txt $(PROCESSING)010/3_in3.txt

#    visit to module = compressNifti, id = 010
$(PROCESSING)010/4_0.nii.gz: $(id010_DATA)mask_image.nii
	~/dtiFitDummy/scripts/compressNifti.script $(PROCESSING)010/4_0.nii.gz $(id010_DATA)mask_image.nii

#    visit to module = getBvals, id = 010
$(PROCESSING)010/1_0.txt: $(id010_DATA)procpar
	~/dtiFitDummy/scripts/getBvals.script $(PROCESSING)010/1_0.txt $(id010_DATA)procpar

#    visit to module = getBvecs, id = 010
$(PROCESSING)010/2_0.txt: $(id010_DATA)procpar
	~/dtiFitDummy/scripts/getBvecs.script $(PROCESSING)010/2_0.txt $(id010_DATA)procpar

# Dependency tree for id001_sink1 below
#    ID   = 001
#    SINK = 1

#    visit to sink = L1, id = 001
.PHONEY: id001_sink1
id001_sink1: $(PROCESSING)001/3_1.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	date; cp $(PROCESSING)001/3_1.nii.gz $(id001_DATA)results/L1.nii.gz; date
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id002_sink1 below
#    ID   = 002
#    SINK = 1

#    visit to sink = L1, id = 002
.PHONEY: id002_sink1
id002_sink1: $(PROCESSING)002/3_1.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	date; cp $(PROCESSING)002/3_1.nii.gz $(id002_DATA)results/L1.nii.gz; date
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id003_sink1 below
#    ID   = 003
#    SINK = 1

#    visit to sink = L1, id = 003
.PHONEY: id003_sink1
id003_sink1: $(PROCESSING)003/3_1.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	date; cp $(PROCESSING)003/3_1.nii.gz $(id003_DATA)results/L1.nii.gz; date
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id004_sink1 below
#    ID   = 004
#    SINK = 1

#    visit to sink = L1, id = 004
.PHONEY: id004_sink1
id004_sink1: $(PROCESSING)004/3_1.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)004/3_1.nii.gz $(id004_DATA)results/L1.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id005_sink1 below
#    ID   = 005
#    SINK = 1

#    visit to sink = L1, id = 005
.PHONEY: id005_sink1
id005_sink1: $(PROCESSING)005/3_1.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)005/3_1.nii.gz $(id005_DATA)results/L1.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id006_sink1 below
#    ID   = 006
#    SINK = 1

#    visit to sink = L1, id = 006
.PHONEY: id006_sink1
id006_sink1: $(PROCESSING)006/3_1.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)006/3_1.nii.gz $(id006_DATA)results/L1.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id007_sink1 below
#    ID   = 007
#    SINK = 1

#    visit to sink = L1, id = 007
.PHONEY: id007_sink1
id007_sink1: $(PROCESSING)007/3_1.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)007/3_1.nii.gz $(id007_DATA)results/L1.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id008_sink1 below
#    ID   = 008
#    SINK = 1

#    visit to sink = L1, id = 008
.PHONEY: id008_sink1
id008_sink1: $(PROCESSING)008/3_1.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)008/3_1.nii.gz $(id008_DATA)results/L1.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id009_sink1 below
#    ID   = 009
#    SINK = 1

#    visit to sink = L1, id = 009
.PHONEY: id009_sink1
id009_sink1: $(PROCESSING)009/3_1.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)009/3_1.nii.gz $(id009_DATA)results/L1.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id010_sink1 below
#    ID   = 010
#    SINK = 1

#    visit to sink = L1, id = 010
.PHONEY: id010_sink1
id010_sink1: $(PROCESSING)010/3_1.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)010/3_1.nii.gz $(id010_DATA)results/L1.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id001_sink2 below
#    ID   = 001
#    SINK = 2

#    visit to sink = L2, id = 001
.PHONEY: id001_sink2
id001_sink2: $(PROCESSING)001/3_2.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)001/3_2.nii.gz $(id001_DATA)results/L2.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id002_sink2 below
#    ID   = 002
#    SINK = 2

#    visit to sink = L2, id = 002
.PHONEY: id002_sink2
id002_sink2: $(PROCESSING)002/3_2.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)002/3_2.nii.gz $(id002_DATA)results/L2.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id003_sink2 below
#    ID   = 003
#    SINK = 2

#    visit to sink = L2, id = 003
.PHONEY: id003_sink2
id003_sink2: $(PROCESSING)003/3_2.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)003/3_2.nii.gz $(id003_DATA)results/L2.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id004_sink2 below
#    ID   = 004
#    SINK = 2

#    visit to sink = L2, id = 004
.PHONEY: id004_sink2
id004_sink2: $(PROCESSING)004/3_2.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)004/3_2.nii.gz $(id004_DATA)results/L2.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id005_sink2 below
#    ID   = 005
#    SINK = 2

#    visit to sink = L2, id = 005
.PHONEY: id005_sink2
id005_sink2: $(PROCESSING)005/3_2.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)005/3_2.nii.gz $(id005_DATA)results/L2.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id006_sink2 below
#    ID   = 006
#    SINK = 2

#    visit to sink = L2, id = 006
.PHONEY: id006_sink2
id006_sink2: $(PROCESSING)006/3_2.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)006/3_2.nii.gz $(id006_DATA)results/L2.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id007_sink2 below
#    ID   = 007
#    SINK = 2

#    visit to sink = L2, id = 007
.PHONEY: id007_sink2
id007_sink2: $(PROCESSING)007/3_2.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)007/3_2.nii.gz $(id007_DATA)results/L2.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id008_sink2 below
#    ID   = 008
#    SINK = 2

#    visit to sink = L2, id = 008
.PHONEY: id008_sink2
id008_sink2: $(PROCESSING)008/3_2.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)008/3_2.nii.gz $(id008_DATA)results/L2.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id009_sink2 below
#    ID   = 009
#    SINK = 2

#    visit to sink = L2, id = 009
.PHONEY: id009_sink2
id009_sink2: $(PROCESSING)009/3_2.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)009/3_2.nii.gz $(id009_DATA)results/L2.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id010_sink2 below
#    ID   = 010
#    SINK = 2

#    visit to sink = L2, id = 010
.PHONEY: id010_sink2
id010_sink2: $(PROCESSING)010/3_2.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)010/3_2.nii.gz $(id010_DATA)results/L2.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id001_sink3 below
#    ID   = 001
#    SINK = 3

#    visit to sink = L3, id = 001
.PHONEY: id001_sink3
id001_sink3: $(PROCESSING)001/3_3.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)001/3_3.nii.gz $(id001_DATA)results/L3.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id002_sink3 below
#    ID   = 002
#    SINK = 3

#    visit to sink = L3, id = 002
.PHONEY: id002_sink3
id002_sink3: $(PROCESSING)002/3_3.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)002/3_3.nii.gz $(id002_DATA)results/L3.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id003_sink3 below
#    ID   = 003
#    SINK = 3

#    visit to sink = L3, id = 003
.PHONEY: id003_sink3
id003_sink3: $(PROCESSING)003/3_3.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)003/3_3.nii.gz $(id003_DATA)results/L3.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id004_sink3 below
#    ID   = 004
#    SINK = 3

#    visit to sink = L3, id = 004
.PHONEY: id004_sink3
id004_sink3: $(PROCESSING)004/3_3.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)004/3_3.nii.gz $(id004_DATA)results/L3.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id005_sink3 below
#    ID   = 005
#    SINK = 3

#    visit to sink = L3, id = 005
.PHONEY: id005_sink3
id005_sink3: $(PROCESSING)005/3_3.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)005/3_3.nii.gz $(id005_DATA)results/L3.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id006_sink3 below
#    ID   = 006
#    SINK = 3

#    visit to sink = L3, id = 006
.PHONEY: id006_sink3
id006_sink3: $(PROCESSING)006/3_3.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)006/3_3.nii.gz $(id006_DATA)results/L3.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id007_sink3 below
#    ID   = 007
#    SINK = 3

#    visit to sink = L3, id = 007
.PHONEY: id007_sink3
id007_sink3: $(PROCESSING)007/3_3.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)007/3_3.nii.gz $(id007_DATA)results/L3.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id008_sink3 below
#    ID   = 008
#    SINK = 3

#    visit to sink = L3, id = 008
.PHONEY: id008_sink3
id008_sink3: $(PROCESSING)008/3_3.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)008/3_3.nii.gz $(id008_DATA)results/L3.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id009_sink3 below
#    ID   = 009
#    SINK = 3

#    visit to sink = L3, id = 009
.PHONEY: id009_sink3
id009_sink3: $(PROCESSING)009/3_3.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)009/3_3.nii.gz $(id009_DATA)results/L3.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id010_sink3 below
#    ID   = 010
#    SINK = 3

#    visit to sink = L3, id = 010
.PHONEY: id010_sink3
id010_sink3: $(PROCESSING)010/3_3.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)010/3_3.nii.gz $(id010_DATA)results/L3.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id001_sink4 below
#    ID   = 001
#    SINK = 4

#    visit to sink = MD, id = 001
.PHONEY: id001_sink4
id001_sink4: $(PROCESSING)001/3_4.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)001/3_4.nii.gz $(id001_DATA)results/MD.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id002_sink4 below
#    ID   = 002
#    SINK = 4

#    visit to sink = MD, id = 002
.PHONEY: id002_sink4
id002_sink4: $(PROCESSING)002/3_4.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)002/3_4.nii.gz $(id002_DATA)results/MD.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id003_sink4 below
#    ID   = 003
#    SINK = 4

#    visit to sink = MD, id = 003
.PHONEY: id003_sink4
id003_sink4: $(PROCESSING)003/3_4.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)003/3_4.nii.gz $(id003_DATA)results/MD.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id004_sink4 below
#    ID   = 004
#    SINK = 4

#    visit to sink = MD, id = 004
.PHONEY: id004_sink4
id004_sink4: $(PROCESSING)004/3_4.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)004/3_4.nii.gz $(id004_DATA)results/MD.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id005_sink4 below
#    ID   = 005
#    SINK = 4

#    visit to sink = MD, id = 005
.PHONEY: id005_sink4
id005_sink4: $(PROCESSING)005/3_4.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)005/3_4.nii.gz $(id005_DATA)results/MD.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id006_sink4 below
#    ID   = 006
#    SINK = 4

#    visit to sink = MD, id = 006
.PHONEY: id006_sink4
id006_sink4: $(PROCESSING)006/3_4.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)006/3_4.nii.gz $(id006_DATA)results/MD.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id007_sink4 below
#    ID   = 007
#    SINK = 4

#    visit to sink = MD, id = 007
.PHONEY: id007_sink4
id007_sink4: $(PROCESSING)007/3_4.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)007/3_4.nii.gz $(id007_DATA)results/MD.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id008_sink4 below
#    ID   = 008
#    SINK = 4

#    visit to sink = MD, id = 008
.PHONEY: id008_sink4
id008_sink4: $(PROCESSING)008/3_4.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)008/3_4.nii.gz $(id008_DATA)results/MD.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id009_sink4 below
#    ID   = 009
#    SINK = 4

#    visit to sink = MD, id = 009
.PHONEY: id009_sink4
id009_sink4: $(PROCESSING)009/3_4.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)009/3_4.nii.gz $(id009_DATA)results/MD.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id010_sink4 below
#    ID   = 010
#    SINK = 4

#    visit to sink = MD, id = 010
.PHONEY: id010_sink4
id010_sink4: $(PROCESSING)010/3_4.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)010/3_4.nii.gz $(id010_DATA)results/MD.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id001_sink5 below
#    ID   = 001
#    SINK = 5

#    visit to sink = MO, id = 001
.PHONEY: id001_sink5
id001_sink5: $(PROCESSING)001/3_5.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)001/3_5.nii.gz $(id001_DATA)results/MO.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id002_sink5 below
#    ID   = 002
#    SINK = 5

#    visit to sink = MO, id = 002
.PHONEY: id002_sink5
id002_sink5: $(PROCESSING)002/3_5.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)002/3_5.nii.gz $(id002_DATA)results/MO.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id003_sink5 below
#    ID   = 003
#    SINK = 5

#    visit to sink = MO, id = 003
.PHONEY: id003_sink5
id003_sink5: $(PROCESSING)003/3_5.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)003/3_5.nii.gz $(id003_DATA)results/MO.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id004_sink5 below
#    ID   = 004
#    SINK = 5

#    visit to sink = MO, id = 004
.PHONEY: id004_sink5
id004_sink5: $(PROCESSING)004/3_5.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)004/3_5.nii.gz $(id004_DATA)results/MO.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id005_sink5 below
#    ID   = 005
#    SINK = 5

#    visit to sink = MO, id = 005
.PHONEY: id005_sink5
id005_sink5: $(PROCESSING)005/3_5.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)005/3_5.nii.gz $(id005_DATA)results/MO.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id006_sink5 below
#    ID   = 006
#    SINK = 5

#    visit to sink = MO, id = 006
.PHONEY: id006_sink5
id006_sink5: $(PROCESSING)006/3_5.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)006/3_5.nii.gz $(id006_DATA)results/MO.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id007_sink5 below
#    ID   = 007
#    SINK = 5

#    visit to sink = MO, id = 007
.PHONEY: id007_sink5
id007_sink5: $(PROCESSING)007/3_5.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)007/3_5.nii.gz $(id007_DATA)results/MO.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id008_sink5 below
#    ID   = 008
#    SINK = 5

#    visit to sink = MO, id = 008
.PHONEY: id008_sink5
id008_sink5: $(PROCESSING)008/3_5.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)008/3_5.nii.gz $(id008_DATA)results/MO.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id009_sink5 below
#    ID   = 009
#    SINK = 5

#    visit to sink = MO, id = 009
.PHONEY: id009_sink5
id009_sink5: $(PROCESSING)009/3_5.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)009/3_5.nii.gz $(id009_DATA)results/MO.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id010_sink5 below
#    ID   = 010
#    SINK = 5

#    visit to sink = MO, id = 010
.PHONEY: id010_sink5
id010_sink5: $(PROCESSING)010/3_5.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)010/3_5.nii.gz $(id010_DATA)results/MO.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id001_sink6 below
#    ID   = 001
#    SINK = 6

#    visit to sink = S0, id = 001
.PHONEY: id001_sink6
id001_sink6: $(PROCESSING)001/3_6.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)001/3_6.nii.gz $(id001_DATA)results/S0.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id002_sink6 below
#    ID   = 002
#    SINK = 6

#    visit to sink = S0, id = 002
.PHONEY: id002_sink6
id002_sink6: $(PROCESSING)002/3_6.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)002/3_6.nii.gz $(id002_DATA)results/S0.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id003_sink6 below
#    ID   = 003
#    SINK = 6

#    visit to sink = S0, id = 003
.PHONEY: id003_sink6
id003_sink6: $(PROCESSING)003/3_6.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)003/3_6.nii.gz $(id003_DATA)results/S0.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id004_sink6 below
#    ID   = 004
#    SINK = 6

#    visit to sink = S0, id = 004
.PHONEY: id004_sink6
id004_sink6: $(PROCESSING)004/3_6.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)004/3_6.nii.gz $(id004_DATA)results/S0.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id005_sink6 below
#    ID   = 005
#    SINK = 6

#    visit to sink = S0, id = 005
.PHONEY: id005_sink6
id005_sink6: $(PROCESSING)005/3_6.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)005/3_6.nii.gz $(id005_DATA)results/S0.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id006_sink6 below
#    ID   = 006
#    SINK = 6

#    visit to sink = S0, id = 006
.PHONEY: id006_sink6
id006_sink6: $(PROCESSING)006/3_6.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)006/3_6.nii.gz $(id006_DATA)results/S0.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id007_sink6 below
#    ID   = 007
#    SINK = 6

#    visit to sink = S0, id = 007
.PHONEY: id007_sink6
id007_sink6: $(PROCESSING)007/3_6.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)007/3_6.nii.gz $(id007_DATA)results/S0.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id008_sink6 below
#    ID   = 008
#    SINK = 6

#    visit to sink = S0, id = 008
.PHONEY: id008_sink6
id008_sink6: $(PROCESSING)008/3_6.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)008/3_6.nii.gz $(id008_DATA)results/S0.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id009_sink6 below
#    ID   = 009
#    SINK = 6

#    visit to sink = S0, id = 009
.PHONEY: id009_sink6
id009_sink6: $(PROCESSING)009/3_6.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)009/3_6.nii.gz $(id009_DATA)results/S0.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id010_sink6 below
#    ID   = 010
#    SINK = 6

#    visit to sink = S0, id = 010
.PHONEY: id010_sink6
id010_sink6: $(PROCESSING)010/3_6.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)010/3_6.nii.gz $(id010_DATA)results/S0.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id001_sink7 below
#    ID   = 001
#    SINK = 7

#    visit to sink = V1, id = 001
.PHONEY: id001_sink7
id001_sink7: $(PROCESSING)001/3_7.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)001/3_7.nii.gz $(id001_DATA)results/V1.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id002_sink7 below
#    ID   = 002
#    SINK = 7

#    visit to sink = V1, id = 002
.PHONEY: id002_sink7
id002_sink7: $(PROCESSING)002/3_7.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)002/3_7.nii.gz $(id002_DATA)results/V1.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id003_sink7 below
#    ID   = 003
#    SINK = 7

#    visit to sink = V1, id = 003
.PHONEY: id003_sink7
id003_sink7: $(PROCESSING)003/3_7.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)003/3_7.nii.gz $(id003_DATA)results/V1.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id004_sink7 below
#    ID   = 004
#    SINK = 7

#    visit to sink = V1, id = 004
.PHONEY: id004_sink7
id004_sink7: $(PROCESSING)004/3_7.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)004/3_7.nii.gz $(id004_DATA)results/V1.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id005_sink7 below
#    ID   = 005
#    SINK = 7

#    visit to sink = V1, id = 005
.PHONEY: id005_sink7
id005_sink7: $(PROCESSING)005/3_7.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)005/3_7.nii.gz $(id005_DATA)results/V1.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id006_sink7 below
#    ID   = 006
#    SINK = 7

#    visit to sink = V1, id = 006
.PHONEY: id006_sink7
id006_sink7: $(PROCESSING)006/3_7.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)006/3_7.nii.gz $(id006_DATA)results/V1.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id007_sink7 below
#    ID   = 007
#    SINK = 7

#    visit to sink = V1, id = 007
.PHONEY: id007_sink7
id007_sink7: $(PROCESSING)007/3_7.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)007/3_7.nii.gz $(id007_DATA)results/V1.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id008_sink7 below
#    ID   = 008
#    SINK = 7

#    visit to sink = V1, id = 008
.PHONEY: id008_sink7
id008_sink7: $(PROCESSING)008/3_7.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)008/3_7.nii.gz $(id008_DATA)results/V1.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id009_sink7 below
#    ID   = 009
#    SINK = 7

#    visit to sink = V1, id = 009
.PHONEY: id009_sink7
id009_sink7: $(PROCESSING)009/3_7.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)009/3_7.nii.gz $(id009_DATA)results/V1.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id010_sink7 below
#    ID   = 010
#    SINK = 7

#    visit to sink = V1, id = 010
.PHONEY: id010_sink7
id010_sink7: $(PROCESSING)010/3_7.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)010/3_7.nii.gz $(id010_DATA)results/V1.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id001_sink8 below
#    ID   = 001
#    SINK = 8

#    visit to sink = V2, id = 001
.PHONEY: id001_sink8
id001_sink8: $(PROCESSING)001/3_8.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)001/3_8.nii.gz $(id001_DATA)results/V2.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id002_sink8 below
#    ID   = 002
#    SINK = 8

#    visit to sink = V2, id = 002
.PHONEY: id002_sink8
id002_sink8: $(PROCESSING)002/3_8.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)002/3_8.nii.gz $(id002_DATA)results/V2.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id003_sink8 below
#    ID   = 003
#    SINK = 8

#    visit to sink = V2, id = 003
.PHONEY: id003_sink8
id003_sink8: $(PROCESSING)003/3_8.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)003/3_8.nii.gz $(id003_DATA)results/V2.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id004_sink8 below
#    ID   = 004
#    SINK = 8

#    visit to sink = V2, id = 004
.PHONEY: id004_sink8
id004_sink8: $(PROCESSING)004/3_8.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)004/3_8.nii.gz $(id004_DATA)results/V2.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id005_sink8 below
#    ID   = 005
#    SINK = 8

#    visit to sink = V2, id = 005
.PHONEY: id005_sink8
id005_sink8: $(PROCESSING)005/3_8.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)005/3_8.nii.gz $(id005_DATA)results/V2.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id006_sink8 below
#    ID   = 006
#    SINK = 8

#    visit to sink = V2, id = 006
.PHONEY: id006_sink8
id006_sink8: $(PROCESSING)006/3_8.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)006/3_8.nii.gz $(id006_DATA)results/V2.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id007_sink8 below
#    ID   = 007
#    SINK = 8

#    visit to sink = V2, id = 007
.PHONEY: id007_sink8
id007_sink8: $(PROCESSING)007/3_8.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)007/3_8.nii.gz $(id007_DATA)results/V2.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id008_sink8 below
#    ID   = 008
#    SINK = 8

#    visit to sink = V2, id = 008
.PHONEY: id008_sink8
id008_sink8: $(PROCESSING)008/3_8.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)008/3_8.nii.gz $(id008_DATA)results/V2.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id009_sink8 below
#    ID   = 009
#    SINK = 8

#    visit to sink = V2, id = 009
.PHONEY: id009_sink8
id009_sink8: $(PROCESSING)009/3_8.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)009/3_8.nii.gz $(id009_DATA)results/V2.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id010_sink8 below
#    ID   = 010
#    SINK = 8

#    visit to sink = V2, id = 010
.PHONEY: id010_sink8
id010_sink8: $(PROCESSING)010/3_8.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)010/3_8.nii.gz $(id010_DATA)results/V2.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id001_sink9 below
#    ID   = 001
#    SINK = 9

#    visit to sink = V3, id = 001
.PHONEY: id001_sink9
id001_sink9: $(PROCESSING)001/3_9.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)001/3_9.nii.gz $(id001_DATA)results/V3.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id002_sink9 below
#    ID   = 002
#    SINK = 9

#    visit to sink = V3, id = 002
.PHONEY: id002_sink9
id002_sink9: $(PROCESSING)002/3_9.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)002/3_9.nii.gz $(id002_DATA)results/V3.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id003_sink9 below
#    ID   = 003
#    SINK = 9

#    visit to sink = V3, id = 003
.PHONEY: id003_sink9
id003_sink9: $(PROCESSING)003/3_9.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)003/3_9.nii.gz $(id003_DATA)results/V3.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id004_sink9 below
#    ID   = 004
#    SINK = 9

#    visit to sink = V3, id = 004
.PHONEY: id004_sink9
id004_sink9: $(PROCESSING)004/3_9.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)004/3_9.nii.gz $(id004_DATA)results/V3.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id005_sink9 below
#    ID   = 005
#    SINK = 9

#    visit to sink = V3, id = 005
.PHONEY: id005_sink9
id005_sink9: $(PROCESSING)005/3_9.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)005/3_9.nii.gz $(id005_DATA)results/V3.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id006_sink9 below
#    ID   = 006
#    SINK = 9

#    visit to sink = V3, id = 006
.PHONEY: id006_sink9
id006_sink9: $(PROCESSING)006/3_9.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)006/3_9.nii.gz $(id006_DATA)results/V3.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id007_sink9 below
#    ID   = 007
#    SINK = 9

#    visit to sink = V3, id = 007
.PHONEY: id007_sink9
id007_sink9: $(PROCESSING)007/3_9.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)007/3_9.nii.gz $(id007_DATA)results/V3.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id008_sink9 below
#    ID   = 008
#    SINK = 9

#    visit to sink = V3, id = 008
.PHONEY: id008_sink9
id008_sink9: $(PROCESSING)008/3_9.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)008/3_9.nii.gz $(id008_DATA)results/V3.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id009_sink9 below
#    ID   = 009
#    SINK = 9

#    visit to sink = V3, id = 009
.PHONEY: id009_sink9
id009_sink9: $(PROCESSING)009/3_9.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)009/3_9.nii.gz $(id009_DATA)results/V3.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id010_sink9 below
#    ID   = 010
#    SINK = 9

#    visit to sink = V3, id = 010
.PHONEY: id010_sink9
id010_sink9: $(PROCESSING)010/3_9.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)010/3_9.nii.gz $(id010_DATA)results/V3.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id001_sink12 below
#    ID   = 001
#    SINK = 12

#    visit to sink = M1, id = 001
.PHONEY: id001_sink12
id001_sink12: $(PROCESSING)001/5_1.mat
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)001/5_1.mat $(id001_DATA)results/M1.mat
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id002_sink12 below
#    ID   = 002
#    SINK = 12

#    visit to sink = M1, id = 002
.PHONEY: id002_sink12
id002_sink12: $(PROCESSING)002/5_1.mat
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)002/5_1.mat $(id002_DATA)results/M1.mat
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id003_sink12 below
#    ID   = 003
#    SINK = 12

#    visit to sink = M1, id = 003
.PHONEY: id003_sink12
id003_sink12: $(PROCESSING)003/5_1.mat
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)003/5_1.mat $(id003_DATA)results/M1.mat
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id004_sink12 below
#    ID   = 004
#    SINK = 12

#    visit to sink = M1, id = 004
.PHONEY: id004_sink12
id004_sink12: $(PROCESSING)004/5_1.mat
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)004/5_1.mat $(id004_DATA)results/M1.mat
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id005_sink12 below
#    ID   = 005
#    SINK = 12

#    visit to sink = M1, id = 005
.PHONEY: id005_sink12
id005_sink12: $(PROCESSING)005/5_1.mat
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)005/5_1.mat $(id005_DATA)results/M1.mat
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id006_sink12 below
#    ID   = 006
#    SINK = 12

#    visit to sink = M1, id = 006
.PHONEY: id006_sink12
id006_sink12: $(PROCESSING)006/5_1.mat
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)006/5_1.mat $(id006_DATA)results/M1.mat
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id007_sink12 below
#    ID   = 007
#    SINK = 12

#    visit to sink = M1, id = 007
.PHONEY: id007_sink12
id007_sink12: $(PROCESSING)007/5_1.mat
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)007/5_1.mat $(id007_DATA)results/M1.mat
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id008_sink12 below
#    ID   = 008
#    SINK = 12

#    visit to sink = M1, id = 008
.PHONEY: id008_sink12
id008_sink12: $(PROCESSING)008/5_1.mat
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)008/5_1.mat $(id008_DATA)results/M1.mat
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id009_sink12 below
#    ID   = 009
#    SINK = 12

#    visit to sink = M1, id = 009
.PHONEY: id009_sink12
id009_sink12: $(PROCESSING)009/5_1.mat
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)009/5_1.mat $(id009_DATA)results/M1.mat
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id010_sink12 below
#    ID   = 010
#    SINK = 12

#    visit to sink = M1, id = 010
.PHONEY: id010_sink12
id010_sink12: $(PROCESSING)010/5_1.mat
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)010/5_1.mat $(id010_DATA)results/M1.mat
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id001_sink13 below
#    ID   = 001
#    SINK = 13

#    visit to sink = Reg4To12, id = 001
.PHONEY: id001_sink13
id001_sink13: $(PROCESSING)001/5_0.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)001/5_0.nii.gz $(id001_DATA)results/Reg4To12.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

#    visit to module = flirt, id = 001
 %/001/5_0.nii.gz %/001/5_1.mat: %/001/5_in0.nii.gz %/001/5_in1.nii.gz %/001/5_in2
	~/dtiFitDummy/scripts/flirt.script $(PROCESSING)001/5_0.nii.gz $(PROCESSING)001/5_1.mat $(id001_DATA)4_slices.nii.gz $(id001_DATA)12_slices.nii.gz `cat $(PROCESSING)001/15_0`

$(PROCESSING)001/5_in0.nii.gz: $(id001_DATA)4_slices.nii.gz
	 ln -sf $(id001_DATA)4_slices.nii.gz $(PROCESSING)001/5_in0.nii.gz

$(PROCESSING)001/5_in1.nii.gz: $(id001_DATA)12_slices.nii.gz
	 ln -sf $(id001_DATA)12_slices.nii.gz $(PROCESSING)001/5_in1.nii.gz

$(PROCESSING)001/5_in2: $(PROCESSING)001/15_0
	 ln -sf ../../$(PROCESSING)001/15_0 $(PROCESSING)001/5_in2

#    visit to source = dof 1, id = 001
$(PROCESSING)001/15_0:
	[ ! -f $(PROCESSING)001/15_0 ] && echo "6" > $(PROCESSING)001/15_0; if [ -f $(PROCESSING)001/15_0 ] && [ `cat $(PROCESSING)001/15_0` != "6" ]; then echo "6" > $(PROCESSING)001/15_0; fi

# Dependency tree for id002_sink13 below
#    ID   = 002
#    SINK = 13

#    visit to sink = Reg4To12, id = 002
.PHONEY: id002_sink13
id002_sink13: $(PROCESSING)002/5_0.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)002/5_0.nii.gz $(id002_DATA)results/Reg4To12.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

#    visit to module = flirt, id = 002
 %/002/5_0.nii.gz %/002/5_1.mat: %/002/5_in0.nii.gz %/002/5_in1.nii.gz %/002/5_in2
	~/dtiFitDummy/scripts/flirt.script $(PROCESSING)002/5_0.nii.gz $(PROCESSING)002/5_1.mat $(id002_DATA)4_slices.nii.gz $(id002_DATA)12_slices.nii.gz `cat $(PROCESSING)002/15_0`

$(PROCESSING)002/5_in0.nii.gz: $(id002_DATA)4_slices.nii.gz
	 ln -sf $(id002_DATA)4_slices.nii.gz $(PROCESSING)002/5_in0.nii.gz

$(PROCESSING)002/5_in1.nii.gz: $(id002_DATA)12_slices.nii.gz
	 ln -sf $(id002_DATA)12_slices.nii.gz $(PROCESSING)002/5_in1.nii.gz

$(PROCESSING)002/5_in2: $(PROCESSING)002/15_0
	 ln -sf ../../$(PROCESSING)002/15_0 $(PROCESSING)002/5_in2

#    visit to source = dof 1, id = 002
$(PROCESSING)002/15_0:
	[ ! -f $(PROCESSING)002/15_0 ] && echo "6" > $(PROCESSING)002/15_0; if [ -f $(PROCESSING)002/15_0 ] && [ `cat $(PROCESSING)002/15_0` != "6" ]; then echo "6" > $(PROCESSING)002/15_0; fi

# Dependency tree for id003_sink13 below
#    ID   = 003
#    SINK = 13

#    visit to sink = Reg4To12, id = 003
.PHONEY: id003_sink13
id003_sink13: $(PROCESSING)003/5_0.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)003/5_0.nii.gz $(id003_DATA)results/Reg4To12.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

#    visit to module = flirt, id = 003
 %/003/5_0.nii.gz %/003/5_1.mat: %/003/5_in0.nii.gz %/003/5_in1.nii.gz %/003/5_in2
	~/dtiFitDummy/scripts/flirt.script $(PROCESSING)003/5_0.nii.gz $(PROCESSING)003/5_1.mat $(id003_DATA)4_slices.nii.gz $(id003_DATA)12_slices.nii.gz `cat $(PROCESSING)003/15_0`

$(PROCESSING)003/5_in0.nii.gz: $(id003_DATA)4_slices.nii.gz
	 ln -sf $(id003_DATA)4_slices.nii.gz $(PROCESSING)003/5_in0.nii.gz

$(PROCESSING)003/5_in1.nii.gz: $(id003_DATA)12_slices.nii.gz
	 ln -sf $(id003_DATA)12_slices.nii.gz $(PROCESSING)003/5_in1.nii.gz

$(PROCESSING)003/5_in2: $(PROCESSING)003/15_0
	 ln -sf ../../$(PROCESSING)003/15_0 $(PROCESSING)003/5_in2

#    visit to source = dof 1, id = 003
$(PROCESSING)003/15_0:
	[ ! -f $(PROCESSING)003/15_0 ] && echo "6" > $(PROCESSING)003/15_0; if [ -f $(PROCESSING)003/15_0 ] && [ `cat $(PROCESSING)003/15_0` != "6" ]; then echo "6" > $(PROCESSING)003/15_0; fi

# Dependency tree for id004_sink13 below
#    ID   = 004
#    SINK = 13

#    visit to sink = Reg4To12, id = 004
.PHONEY: id004_sink13
id004_sink13: $(PROCESSING)004/5_0.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)004/5_0.nii.gz $(id004_DATA)results/Reg4To12.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

#    visit to module = flirt, id = 004
 %/004/5_0.nii.gz %/004/5_1.mat: %/004/5_in0.nii.gz %/004/5_in1.nii.gz %/004/5_in2
	~/dtiFitDummy/scripts/flirt.script $(PROCESSING)004/5_0.nii.gz $(PROCESSING)004/5_1.mat $(id004_DATA)4_slices.nii.gz $(id004_DATA)12_slices.nii.gz `cat $(PROCESSING)004/15_0`

$(PROCESSING)004/5_in0.nii.gz: $(id004_DATA)4_slices.nii.gz
	 ln -sf $(id004_DATA)4_slices.nii.gz $(PROCESSING)004/5_in0.nii.gz

$(PROCESSING)004/5_in1.nii.gz: $(id004_DATA)12_slices.nii.gz
	 ln -sf $(id004_DATA)12_slices.nii.gz $(PROCESSING)004/5_in1.nii.gz

$(PROCESSING)004/5_in2: $(PROCESSING)004/15_0
	 ln -sf ../../$(PROCESSING)004/15_0 $(PROCESSING)004/5_in2

#    visit to source = dof 1, id = 004
$(PROCESSING)004/15_0:
	[ ! -f $(PROCESSING)004/15_0 ] && echo "6" > $(PROCESSING)004/15_0; if [ -f $(PROCESSING)004/15_0 ] && [ `cat $(PROCESSING)004/15_0` != "6" ]; then echo "6" > $(PROCESSING)004/15_0; fi

# Dependency tree for id005_sink13 below
#    ID   = 005
#    SINK = 13

#    visit to sink = Reg4To12, id = 005
.PHONEY: id005_sink13
id005_sink13: $(PROCESSING)005/5_0.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)005/5_0.nii.gz $(id005_DATA)results/Reg4To12.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

#    visit to module = flirt, id = 005
 %/005/5_0.nii.gz %/005/5_1.mat: %/005/5_in0.nii.gz %/005/5_in1.nii.gz %/005/5_in2
	~/dtiFitDummy/scripts/flirt.script $(PROCESSING)005/5_0.nii.gz $(PROCESSING)005/5_1.mat $(id005_DATA)4_slices.nii.gz $(id005_DATA)12_slices.nii.gz `cat $(PROCESSING)005/15_0`

$(PROCESSING)005/5_in0.nii.gz: $(id005_DATA)4_slices.nii.gz
	 ln -sf $(id005_DATA)4_slices.nii.gz $(PROCESSING)005/5_in0.nii.gz

$(PROCESSING)005/5_in1.nii.gz: $(id005_DATA)12_slices.nii.gz
	 ln -sf $(id005_DATA)12_slices.nii.gz $(PROCESSING)005/5_in1.nii.gz

$(PROCESSING)005/5_in2: $(PROCESSING)005/15_0
	 ln -sf ../../$(PROCESSING)005/15_0 $(PROCESSING)005/5_in2

#    visit to source = dof 1, id = 005
$(PROCESSING)005/15_0:
	[ ! -f $(PROCESSING)005/15_0 ] && echo "6" > $(PROCESSING)005/15_0; if [ -f $(PROCESSING)005/15_0 ] && [ `cat $(PROCESSING)005/15_0` != "6" ]; then echo "6" > $(PROCESSING)005/15_0; fi

# Dependency tree for id006_sink13 below
#    ID   = 006
#    SINK = 13

#    visit to sink = Reg4To12, id = 006
.PHONEY: id006_sink13
id006_sink13: $(PROCESSING)006/5_0.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)006/5_0.nii.gz $(id006_DATA)results/Reg4To12.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

#    visit to module = flirt, id = 006
 %/006/5_0.nii.gz %/006/5_1.mat: %/006/5_in0.nii.gz %/006/5_in1.nii.gz %/006/5_in2
	~/dtiFitDummy/scripts/flirt.script $(PROCESSING)006/5_0.nii.gz $(PROCESSING)006/5_1.mat $(id006_DATA)4_slices.nii.gz $(id006_DATA)12_slices.nii.gz `cat $(PROCESSING)006/15_0`

$(PROCESSING)006/5_in0.nii.gz: $(id006_DATA)4_slices.nii.gz
	 ln -sf $(id006_DATA)4_slices.nii.gz $(PROCESSING)006/5_in0.nii.gz

$(PROCESSING)006/5_in1.nii.gz: $(id006_DATA)12_slices.nii.gz
	 ln -sf $(id006_DATA)12_slices.nii.gz $(PROCESSING)006/5_in1.nii.gz

$(PROCESSING)006/5_in2: $(PROCESSING)006/15_0
	 ln -sf ../../$(PROCESSING)006/15_0 $(PROCESSING)006/5_in2

#    visit to source = dof 1, id = 006
$(PROCESSING)006/15_0:
	[ ! -f $(PROCESSING)006/15_0 ] && echo "6" > $(PROCESSING)006/15_0; if [ -f $(PROCESSING)006/15_0 ] && [ `cat $(PROCESSING)006/15_0` != "6" ]; then echo "6" > $(PROCESSING)006/15_0; fi

# Dependency tree for id007_sink13 below
#    ID   = 007
#    SINK = 13

#    visit to sink = Reg4To12, id = 007
.PHONEY: id007_sink13
id007_sink13: $(PROCESSING)007/5_0.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)007/5_0.nii.gz $(id007_DATA)results/Reg4To12.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

#    visit to module = flirt, id = 007
 %/007/5_0.nii.gz %/007/5_1.mat: %/007/5_in0.nii.gz %/007/5_in1.nii.gz %/007/5_in2
	~/dtiFitDummy/scripts/flirt.script $(PROCESSING)007/5_0.nii.gz $(PROCESSING)007/5_1.mat $(id007_DATA)4_slices.nii.gz $(id007_DATA)12_slices.nii.gz `cat $(PROCESSING)007/15_0`

$(PROCESSING)007/5_in0.nii.gz: $(id007_DATA)4_slices.nii.gz
	 ln -sf $(id007_DATA)4_slices.nii.gz $(PROCESSING)007/5_in0.nii.gz

$(PROCESSING)007/5_in1.nii.gz: $(id007_DATA)12_slices.nii.gz
	 ln -sf $(id007_DATA)12_slices.nii.gz $(PROCESSING)007/5_in1.nii.gz

$(PROCESSING)007/5_in2: $(PROCESSING)007/15_0
	 ln -sf ../../$(PROCESSING)007/15_0 $(PROCESSING)007/5_in2

#    visit to source = dof 1, id = 007
$(PROCESSING)007/15_0:
	[ ! -f $(PROCESSING)007/15_0 ] && echo "6" > $(PROCESSING)007/15_0; if [ -f $(PROCESSING)007/15_0 ] && [ `cat $(PROCESSING)007/15_0` != "6" ]; then echo "6" > $(PROCESSING)007/15_0; fi

# Dependency tree for id008_sink13 below
#    ID   = 008
#    SINK = 13

#    visit to sink = Reg4To12, id = 008
.PHONEY: id008_sink13
id008_sink13: $(PROCESSING)008/5_0.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)008/5_0.nii.gz $(id008_DATA)results/Reg4To12.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

#    visit to module = flirt, id = 008
 %/008/5_0.nii.gz %/008/5_1.mat: %/008/5_in0.nii.gz %/008/5_in1.nii.gz %/008/5_in2
	~/dtiFitDummy/scripts/flirt.script $(PROCESSING)008/5_0.nii.gz $(PROCESSING)008/5_1.mat $(id008_DATA)4_slices.nii.gz $(id008_DATA)12_slices.nii.gz `cat $(PROCESSING)008/15_0`

$(PROCESSING)008/5_in0.nii.gz: $(id008_DATA)4_slices.nii.gz
	 ln -sf $(id008_DATA)4_slices.nii.gz $(PROCESSING)008/5_in0.nii.gz

$(PROCESSING)008/5_in1.nii.gz: $(id008_DATA)12_slices.nii.gz
	 ln -sf $(id008_DATA)12_slices.nii.gz $(PROCESSING)008/5_in1.nii.gz

$(PROCESSING)008/5_in2: $(PROCESSING)008/15_0
	 ln -sf ../../$(PROCESSING)008/15_0 $(PROCESSING)008/5_in2

#    visit to source = dof 1, id = 008
$(PROCESSING)008/15_0:
	[ ! -f $(PROCESSING)008/15_0 ] && echo "6" > $(PROCESSING)008/15_0; if [ -f $(PROCESSING)008/15_0 ] && [ `cat $(PROCESSING)008/15_0` != "6" ]; then echo "6" > $(PROCESSING)008/15_0; fi

# Dependency tree for id009_sink13 below
#    ID   = 009
#    SINK = 13

#    visit to sink = Reg4To12, id = 009
.PHONEY: id009_sink13
id009_sink13: $(PROCESSING)009/5_0.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)009/5_0.nii.gz $(id009_DATA)results/Reg4To12.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

#    visit to module = flirt, id = 009
 %/009/5_0.nii.gz %/009/5_1.mat: %/009/5_in0.nii.gz %/009/5_in1.nii.gz %/009/5_in2
	~/dtiFitDummy/scripts/flirt.script $(PROCESSING)009/5_0.nii.gz $(PROCESSING)009/5_1.mat $(id009_DATA)4_slices.nii.gz $(id009_DATA)12_slices.nii.gz `cat $(PROCESSING)009/15_0`

$(PROCESSING)009/5_in0.nii.gz: $(id009_DATA)4_slices.nii.gz
	 ln -sf $(id009_DATA)4_slices.nii.gz $(PROCESSING)009/5_in0.nii.gz

$(PROCESSING)009/5_in1.nii.gz: $(id009_DATA)12_slices.nii.gz
	 ln -sf $(id009_DATA)12_slices.nii.gz $(PROCESSING)009/5_in1.nii.gz

$(PROCESSING)009/5_in2: $(PROCESSING)009/15_0
	 ln -sf ../../$(PROCESSING)009/15_0 $(PROCESSING)009/5_in2

#    visit to source = dof 1, id = 009
$(PROCESSING)009/15_0:
	[ ! -f $(PROCESSING)009/15_0 ] && echo "6" > $(PROCESSING)009/15_0; if [ -f $(PROCESSING)009/15_0 ] && [ `cat $(PROCESSING)009/15_0` != "6" ]; then echo "6" > $(PROCESSING)009/15_0; fi

# Dependency tree for id010_sink13 below
#    ID   = 010
#    SINK = 13

#    visit to sink = Reg4To12, id = 010
.PHONEY: id010_sink13
id010_sink13: $(PROCESSING)010/5_0.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)010/5_0.nii.gz $(id010_DATA)results/Reg4To12.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

#    visit to module = flirt, id = 010
 %/010/5_0.nii.gz %/010/5_1.mat: %/010/5_in0.nii.gz %/010/5_in1.nii.gz %/010/5_in2
	~/dtiFitDummy/scripts/flirt.script $(PROCESSING)010/5_0.nii.gz $(PROCESSING)010/5_1.mat $(id010_DATA)4_slices.nii.gz $(id010_DATA)12_slices.nii.gz `cat $(PROCESSING)010/15_0`

$(PROCESSING)010/5_in0.nii.gz: $(id010_DATA)4_slices.nii.gz
	 ln -sf $(id010_DATA)4_slices.nii.gz $(PROCESSING)010/5_in0.nii.gz

$(PROCESSING)010/5_in1.nii.gz: $(id010_DATA)12_slices.nii.gz
	 ln -sf $(id010_DATA)12_slices.nii.gz $(PROCESSING)010/5_in1.nii.gz

$(PROCESSING)010/5_in2: $(PROCESSING)010/15_0
	 ln -sf ../../$(PROCESSING)010/15_0 $(PROCESSING)010/5_in2

#    visit to source = dof 1, id = 010
$(PROCESSING)010/15_0:
	[ ! -f $(PROCESSING)010/15_0 ] && echo "6" > $(PROCESSING)010/15_0; if [ -f $(PROCESSING)010/15_0 ] && [ `cat $(PROCESSING)010/15_0` != "6" ]; then echo "6" > $(PROCESSING)010/15_0; fi

# Dependency tree for id001_sink14 below
#    ID   = 001
#    SINK = 14

#    visit to sink = M2, id = 001
.PHONEY: id001_sink14
id001_sink14: $(PROCESSING)001/6_1.mat
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)001/6_1.mat $(id001_DATA)results/M2.mat
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id002_sink14 below
#    ID   = 002
#    SINK = 14

#    visit to sink = M2, id = 002
.PHONEY: id002_sink14
id002_sink14: $(PROCESSING)002/6_1.mat
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)002/6_1.mat $(id002_DATA)results/M2.mat
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id003_sink14 below
#    ID   = 003
#    SINK = 14

#    visit to sink = M2, id = 003
.PHONEY: id003_sink14
id003_sink14: $(PROCESSING)003/6_1.mat
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)003/6_1.mat $(id003_DATA)results/M2.mat
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id004_sink14 below
#    ID   = 004
#    SINK = 14

#    visit to sink = M2, id = 004
.PHONEY: id004_sink14
id004_sink14: $(PROCESSING)004/6_1.mat
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)004/6_1.mat $(id004_DATA)results/M2.mat
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id005_sink14 below
#    ID   = 005
#    SINK = 14

#    visit to sink = M2, id = 005
.PHONEY: id005_sink14
id005_sink14: $(PROCESSING)005/6_1.mat
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)005/6_1.mat $(id005_DATA)results/M2.mat
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id006_sink14 below
#    ID   = 006
#    SINK = 14

#    visit to sink = M2, id = 006
.PHONEY: id006_sink14
id006_sink14: $(PROCESSING)006/6_1.mat
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)006/6_1.mat $(id006_DATA)results/M2.mat
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id007_sink14 below
#    ID   = 007
#    SINK = 14

#    visit to sink = M2, id = 007
.PHONEY: id007_sink14
id007_sink14: $(PROCESSING)007/6_1.mat
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)007/6_1.mat $(id007_DATA)results/M2.mat
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id008_sink14 below
#    ID   = 008
#    SINK = 14

#    visit to sink = M2, id = 008
.PHONEY: id008_sink14
id008_sink14: $(PROCESSING)008/6_1.mat
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)008/6_1.mat $(id008_DATA)results/M2.mat
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id009_sink14 below
#    ID   = 009
#    SINK = 14

#    visit to sink = M2, id = 009
.PHONEY: id009_sink14
id009_sink14: $(PROCESSING)009/6_1.mat
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)009/6_1.mat $(id009_DATA)results/M2.mat
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id010_sink14 below
#    ID   = 010
#    SINK = 14

#    visit to sink = M2, id = 010
.PHONEY: id010_sink14
id010_sink14: $(PROCESSING)010/6_1.mat
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)010/6_1.mat $(id010_DATA)results/M2.mat
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id001_sink15 below
#    ID   = 001
#    SINK = 15

#    visit to sink = Reg12ToTemplate, id = 001
.PHONEY: id001_sink15
id001_sink15: $(PROCESSING)001/6_0.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)001/6_0.nii.gz $(id001_DATA)results/Reg12ToTemplate.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

#    visit to module = flirt, id = 001
 %/001/6_0.nii.gz %/001/6_1.mat: %/001/6_in0.nii.gz %/001/6_in1.nii.gz %/001/6_in2
	~/dtiFitDummy/scripts/flirt.script $(PROCESSING)001/6_0.nii.gz $(PROCESSING)001/6_1.mat $(id001_DATA)12_slices.nii.gz $(id001_DATA)template.nii.gz `cat $(PROCESSING)001/13_0`

$(PROCESSING)001/6_in0.nii.gz: $(id001_DATA)12_slices.nii.gz
	 ln -sf $(id001_DATA)12_slices.nii.gz $(PROCESSING)001/6_in0.nii.gz

$(PROCESSING)001/6_in1.nii.gz: $(id001_DATA)template.nii.gz
	 ln -sf $(id001_DATA)template.nii.gz $(PROCESSING)001/6_in1.nii.gz

$(PROCESSING)001/6_in2: $(PROCESSING)001/13_0
	 ln -sf ../../$(PROCESSING)001/13_0 $(PROCESSING)001/6_in2

#    visit to source = dof 2, id = 001
$(PROCESSING)001/13_0:
	[ ! -f $(PROCESSING)001/13_0 ] && echo "12" > $(PROCESSING)001/13_0; if [ -f $(PROCESSING)001/13_0 ] && [ `cat $(PROCESSING)001/13_0` != "12" ]; then echo "12" > $(PROCESSING)001/13_0; fi

# Dependency tree for id002_sink15 below
#    ID   = 002
#    SINK = 15

#    visit to sink = Reg12ToTemplate, id = 002
.PHONEY: id002_sink15
id002_sink15: $(PROCESSING)002/6_0.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)002/6_0.nii.gz $(id002_DATA)results/Reg12ToTemplate.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

#    visit to module = flirt, id = 002
 %/002/6_0.nii.gz %/002/6_1.mat: %/002/6_in0.nii.gz %/002/6_in1.nii.gz %/002/6_in2
	~/dtiFitDummy/scripts/flirt.script $(PROCESSING)002/6_0.nii.gz $(PROCESSING)002/6_1.mat $(id002_DATA)12_slices.nii.gz $(id002_DATA)template.nii.gz `cat $(PROCESSING)002/13_0`

$(PROCESSING)002/6_in0.nii.gz: $(id002_DATA)12_slices.nii.gz
	 ln -sf $(id002_DATA)12_slices.nii.gz $(PROCESSING)002/6_in0.nii.gz

$(PROCESSING)002/6_in1.nii.gz: $(id002_DATA)template.nii.gz
	 ln -sf $(id002_DATA)template.nii.gz $(PROCESSING)002/6_in1.nii.gz

$(PROCESSING)002/6_in2: $(PROCESSING)002/13_0
	 ln -sf ../../$(PROCESSING)002/13_0 $(PROCESSING)002/6_in2

#    visit to source = dof 2, id = 002
$(PROCESSING)002/13_0:
	[ ! -f $(PROCESSING)002/13_0 ] && echo "12" > $(PROCESSING)002/13_0; if [ -f $(PROCESSING)002/13_0 ] && [ `cat $(PROCESSING)002/13_0` != "12" ]; then echo "12" > $(PROCESSING)002/13_0; fi

# Dependency tree for id003_sink15 below
#    ID   = 003
#    SINK = 15

#    visit to sink = Reg12ToTemplate, id = 003
.PHONEY: id003_sink15
id003_sink15: $(PROCESSING)003/6_0.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)003/6_0.nii.gz $(id003_DATA)results/Reg12ToTemplate.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

#    visit to module = flirt, id = 003
 %/003/6_0.nii.gz %/003/6_1.mat: %/003/6_in0.nii.gz %/003/6_in1.nii.gz %/003/6_in2
	~/dtiFitDummy/scripts/flirt.script $(PROCESSING)003/6_0.nii.gz $(PROCESSING)003/6_1.mat $(id003_DATA)12_slices.nii.gz $(id003_DATA)template.nii.gz `cat $(PROCESSING)003/13_0`

$(PROCESSING)003/6_in0.nii.gz: $(id003_DATA)12_slices.nii.gz
	 ln -sf $(id003_DATA)12_slices.nii.gz $(PROCESSING)003/6_in0.nii.gz

$(PROCESSING)003/6_in1.nii.gz: $(id003_DATA)template.nii.gz
	 ln -sf $(id003_DATA)template.nii.gz $(PROCESSING)003/6_in1.nii.gz

$(PROCESSING)003/6_in2: $(PROCESSING)003/13_0
	 ln -sf ../../$(PROCESSING)003/13_0 $(PROCESSING)003/6_in2

#    visit to source = dof 2, id = 003
$(PROCESSING)003/13_0:
	[ ! -f $(PROCESSING)003/13_0 ] && echo "12" > $(PROCESSING)003/13_0; if [ -f $(PROCESSING)003/13_0 ] && [ `cat $(PROCESSING)003/13_0` != "12" ]; then echo "12" > $(PROCESSING)003/13_0; fi

# Dependency tree for id004_sink15 below
#    ID   = 004
#    SINK = 15

#    visit to sink = Reg12ToTemplate, id = 004
.PHONEY: id004_sink15
id004_sink15: $(PROCESSING)004/6_0.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)004/6_0.nii.gz $(id004_DATA)results/Reg12ToTemplate.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

#    visit to module = flirt, id = 004
 %/004/6_0.nii.gz %/004/6_1.mat: %/004/6_in0.nii.gz %/004/6_in1.nii.gz %/004/6_in2
	~/dtiFitDummy/scripts/flirt.script $(PROCESSING)004/6_0.nii.gz $(PROCESSING)004/6_1.mat $(id004_DATA)12_slices.nii.gz $(id004_DATA)template.nii.gz `cat $(PROCESSING)004/13_0`

$(PROCESSING)004/6_in0.nii.gz: $(id004_DATA)12_slices.nii.gz
	 ln -sf $(id004_DATA)12_slices.nii.gz $(PROCESSING)004/6_in0.nii.gz

$(PROCESSING)004/6_in1.nii.gz: $(id004_DATA)template.nii.gz
	 ln -sf $(id004_DATA)template.nii.gz $(PROCESSING)004/6_in1.nii.gz

$(PROCESSING)004/6_in2: $(PROCESSING)004/13_0
	 ln -sf ../../$(PROCESSING)004/13_0 $(PROCESSING)004/6_in2

#    visit to source = dof 2, id = 004
$(PROCESSING)004/13_0:
	[ ! -f $(PROCESSING)004/13_0 ] && echo "12" > $(PROCESSING)004/13_0; if [ -f $(PROCESSING)004/13_0 ] && [ `cat $(PROCESSING)004/13_0` != "12" ]; then echo "12" > $(PROCESSING)004/13_0; fi

# Dependency tree for id005_sink15 below
#    ID   = 005
#    SINK = 15

#    visit to sink = Reg12ToTemplate, id = 005
.PHONEY: id005_sink15
id005_sink15: $(PROCESSING)005/6_0.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)005/6_0.nii.gz $(id005_DATA)results/Reg12ToTemplate.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

#    visit to module = flirt, id = 005
 %/005/6_0.nii.gz %/005/6_1.mat: %/005/6_in0.nii.gz %/005/6_in1.nii.gz %/005/6_in2
	~/dtiFitDummy/scripts/flirt.script $(PROCESSING)005/6_0.nii.gz $(PROCESSING)005/6_1.mat $(id005_DATA)12_slices.nii.gz $(id005_DATA)template.nii.gz `cat $(PROCESSING)005/13_0`

$(PROCESSING)005/6_in0.nii.gz: $(id005_DATA)12_slices.nii.gz
	 ln -sf $(id005_DATA)12_slices.nii.gz $(PROCESSING)005/6_in0.nii.gz

$(PROCESSING)005/6_in1.nii.gz: $(id005_DATA)template.nii.gz
	 ln -sf $(id005_DATA)template.nii.gz $(PROCESSING)005/6_in1.nii.gz

$(PROCESSING)005/6_in2: $(PROCESSING)005/13_0
	 ln -sf ../../$(PROCESSING)005/13_0 $(PROCESSING)005/6_in2

#    visit to source = dof 2, id = 005
$(PROCESSING)005/13_0:
	[ ! -f $(PROCESSING)005/13_0 ] && echo "12" > $(PROCESSING)005/13_0; if [ -f $(PROCESSING)005/13_0 ] && [ `cat $(PROCESSING)005/13_0` != "12" ]; then echo "12" > $(PROCESSING)005/13_0; fi

# Dependency tree for id006_sink15 below
#    ID   = 006
#    SINK = 15

#    visit to sink = Reg12ToTemplate, id = 006
.PHONEY: id006_sink15
id006_sink15: $(PROCESSING)006/6_0.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)006/6_0.nii.gz $(id006_DATA)results/Reg12ToTemplate.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

#    visit to module = flirt, id = 006
 %/006/6_0.nii.gz %/006/6_1.mat: %/006/6_in0.nii.gz %/006/6_in1.nii.gz %/006/6_in2
	~/dtiFitDummy/scripts/flirt.script $(PROCESSING)006/6_0.nii.gz $(PROCESSING)006/6_1.mat $(id006_DATA)12_slices.nii.gz $(id006_DATA)template.nii.gz `cat $(PROCESSING)006/13_0`

$(PROCESSING)006/6_in0.nii.gz: $(id006_DATA)12_slices.nii.gz
	 ln -sf $(id006_DATA)12_slices.nii.gz $(PROCESSING)006/6_in0.nii.gz

$(PROCESSING)006/6_in1.nii.gz: $(id006_DATA)template.nii.gz
	 ln -sf $(id006_DATA)template.nii.gz $(PROCESSING)006/6_in1.nii.gz

$(PROCESSING)006/6_in2: $(PROCESSING)006/13_0
	 ln -sf ../../$(PROCESSING)006/13_0 $(PROCESSING)006/6_in2

#    visit to source = dof 2, id = 006
$(PROCESSING)006/13_0:
	[ ! -f $(PROCESSING)006/13_0 ] && echo "12" > $(PROCESSING)006/13_0; if [ -f $(PROCESSING)006/13_0 ] && [ `cat $(PROCESSING)006/13_0` != "12" ]; then echo "12" > $(PROCESSING)006/13_0; fi

# Dependency tree for id007_sink15 below
#    ID   = 007
#    SINK = 15

#    visit to sink = Reg12ToTemplate, id = 007
.PHONEY: id007_sink15
id007_sink15: $(PROCESSING)007/6_0.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)007/6_0.nii.gz $(id007_DATA)results/Reg12ToTemplate.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

#    visit to module = flirt, id = 007
 %/007/6_0.nii.gz %/007/6_1.mat: %/007/6_in0.nii.gz %/007/6_in1.nii.gz %/007/6_in2
	~/dtiFitDummy/scripts/flirt.script $(PROCESSING)007/6_0.nii.gz $(PROCESSING)007/6_1.mat $(id007_DATA)12_slices.nii.gz $(id007_DATA)template.nii.gz `cat $(PROCESSING)007/13_0`

$(PROCESSING)007/6_in0.nii.gz: $(id007_DATA)12_slices.nii.gz
	 ln -sf $(id007_DATA)12_slices.nii.gz $(PROCESSING)007/6_in0.nii.gz

$(PROCESSING)007/6_in1.nii.gz: $(id007_DATA)template.nii.gz
	 ln -sf $(id007_DATA)template.nii.gz $(PROCESSING)007/6_in1.nii.gz

$(PROCESSING)007/6_in2: $(PROCESSING)007/13_0
	 ln -sf ../../$(PROCESSING)007/13_0 $(PROCESSING)007/6_in2

#    visit to source = dof 2, id = 007
$(PROCESSING)007/13_0:
	[ ! -f $(PROCESSING)007/13_0 ] && echo "12" > $(PROCESSING)007/13_0; if [ -f $(PROCESSING)007/13_0 ] && [ `cat $(PROCESSING)007/13_0` != "12" ]; then echo "12" > $(PROCESSING)007/13_0; fi

# Dependency tree for id008_sink15 below
#    ID   = 008
#    SINK = 15

#    visit to sink = Reg12ToTemplate, id = 008
.PHONEY: id008_sink15
id008_sink15: $(PROCESSING)008/6_0.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)008/6_0.nii.gz $(id008_DATA)results/Reg12ToTemplate.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

#    visit to module = flirt, id = 008
 %/008/6_0.nii.gz %/008/6_1.mat: %/008/6_in0.nii.gz %/008/6_in1.nii.gz %/008/6_in2
	~/dtiFitDummy/scripts/flirt.script $(PROCESSING)008/6_0.nii.gz $(PROCESSING)008/6_1.mat $(id008_DATA)12_slices.nii.gz $(id008_DATA)template.nii.gz `cat $(PROCESSING)008/13_0`

$(PROCESSING)008/6_in0.nii.gz: $(id008_DATA)12_slices.nii.gz
	 ln -sf $(id008_DATA)12_slices.nii.gz $(PROCESSING)008/6_in0.nii.gz

$(PROCESSING)008/6_in1.nii.gz: $(id008_DATA)template.nii.gz
	 ln -sf $(id008_DATA)template.nii.gz $(PROCESSING)008/6_in1.nii.gz

$(PROCESSING)008/6_in2: $(PROCESSING)008/13_0
	 ln -sf ../../$(PROCESSING)008/13_0 $(PROCESSING)008/6_in2

#    visit to source = dof 2, id = 008
$(PROCESSING)008/13_0:
	[ ! -f $(PROCESSING)008/13_0 ] && echo "12" > $(PROCESSING)008/13_0; if [ -f $(PROCESSING)008/13_0 ] && [ `cat $(PROCESSING)008/13_0` != "12" ]; then echo "12" > $(PROCESSING)008/13_0; fi

# Dependency tree for id009_sink15 below
#    ID   = 009
#    SINK = 15

#    visit to sink = Reg12ToTemplate, id = 009
.PHONEY: id009_sink15
id009_sink15: $(PROCESSING)009/6_0.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)009/6_0.nii.gz $(id009_DATA)results/Reg12ToTemplate.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

#    visit to module = flirt, id = 009
 %/009/6_0.nii.gz %/009/6_1.mat: %/009/6_in0.nii.gz %/009/6_in1.nii.gz %/009/6_in2
	~/dtiFitDummy/scripts/flirt.script $(PROCESSING)009/6_0.nii.gz $(PROCESSING)009/6_1.mat $(id009_DATA)12_slices.nii.gz $(id009_DATA)template.nii.gz `cat $(PROCESSING)009/13_0`

$(PROCESSING)009/6_in0.nii.gz: $(id009_DATA)12_slices.nii.gz
	 ln -sf $(id009_DATA)12_slices.nii.gz $(PROCESSING)009/6_in0.nii.gz

$(PROCESSING)009/6_in1.nii.gz: $(id009_DATA)template.nii.gz
	 ln -sf $(id009_DATA)template.nii.gz $(PROCESSING)009/6_in1.nii.gz

$(PROCESSING)009/6_in2: $(PROCESSING)009/13_0
	 ln -sf ../../$(PROCESSING)009/13_0 $(PROCESSING)009/6_in2

#    visit to source = dof 2, id = 009
$(PROCESSING)009/13_0:
	[ ! -f $(PROCESSING)009/13_0 ] && echo "12" > $(PROCESSING)009/13_0; if [ -f $(PROCESSING)009/13_0 ] && [ `cat $(PROCESSING)009/13_0` != "12" ]; then echo "12" > $(PROCESSING)009/13_0; fi

# Dependency tree for id010_sink15 below
#    ID   = 010
#    SINK = 15

#    visit to sink = Reg12ToTemplate, id = 010
.PHONEY: id010_sink15
id010_sink15: $(PROCESSING)010/6_0.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)010/6_0.nii.gz $(id010_DATA)results/Reg12ToTemplate.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

#    visit to module = flirt, id = 010
 %/010/6_0.nii.gz %/010/6_1.mat: %/010/6_in0.nii.gz %/010/6_in1.nii.gz %/010/6_in2
	~/dtiFitDummy/scripts/flirt.script $(PROCESSING)010/6_0.nii.gz $(PROCESSING)010/6_1.mat $(id010_DATA)12_slices.nii.gz $(id010_DATA)template.nii.gz `cat $(PROCESSING)010/13_0`

$(PROCESSING)010/6_in0.nii.gz: $(id010_DATA)12_slices.nii.gz
	 ln -sf $(id010_DATA)12_slices.nii.gz $(PROCESSING)010/6_in0.nii.gz

$(PROCESSING)010/6_in1.nii.gz: $(id010_DATA)template.nii.gz
	 ln -sf $(id010_DATA)template.nii.gz $(PROCESSING)010/6_in1.nii.gz

$(PROCESSING)010/6_in2: $(PROCESSING)010/13_0
	 ln -sf ../../$(PROCESSING)010/13_0 $(PROCESSING)010/6_in2

#    visit to source = dof 2, id = 010
$(PROCESSING)010/13_0:
	[ ! -f $(PROCESSING)010/13_0 ] && echo "12" > $(PROCESSING)010/13_0; if [ -f $(PROCESSING)010/13_0 ] && [ `cat $(PROCESSING)010/13_0` != "12" ]; then echo "12" > $(PROCESSING)010/13_0; fi

# Dependency tree for id001_sink16 below
#    ID   = 001
#    SINK = 16

#    visit to sink = RegDtiTo12, id = 001
.PHONEY: id001_sink16
id001_sink16: $(PROCESSING)001/7_0.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)001/7_0.nii.gz $(id001_DATA)results/RegDtiTo12.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

#    visit to module = flirt, id = 001
 %/001/7_0.nii.gz %/001/7_1.mat: %/001/7_in0.nii.gz %/001/7_in1.nii.gz %/001/7_in2
	~/dtiFitDummy/scripts/flirt.script $(PROCESSING)001/7_0.nii.gz $(PROCESSING)001/7_1.mat $(id001_DATA)DTI_image.nii.gz $(id001_DATA)12_slices.nii.gz `cat $(PROCESSING)001/13_0`

$(PROCESSING)001/7_in0.nii.gz: $(id001_DATA)DTI_image.nii.gz
	 ln -sf $(id001_DATA)DTI_image.nii.gz $(PROCESSING)001/7_in0.nii.gz

$(PROCESSING)001/7_in1.nii.gz: $(id001_DATA)12_slices.nii.gz
	 ln -sf $(id001_DATA)12_slices.nii.gz $(PROCESSING)001/7_in1.nii.gz

$(PROCESSING)001/7_in2: $(PROCESSING)001/13_0
	 ln -sf ../../$(PROCESSING)001/13_0 $(PROCESSING)001/7_in2

# Dependency tree for id002_sink16 below
#    ID   = 002
#    SINK = 16

#    visit to sink = RegDtiTo12, id = 002
.PHONEY: id002_sink16
id002_sink16: $(PROCESSING)002/7_0.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)002/7_0.nii.gz $(id002_DATA)results/RegDtiTo12.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

#    visit to module = flirt, id = 002
 %/002/7_0.nii.gz %/002/7_1.mat: %/002/7_in0.nii.gz %/002/7_in1.nii.gz %/002/7_in2
	~/dtiFitDummy/scripts/flirt.script $(PROCESSING)002/7_0.nii.gz $(PROCESSING)002/7_1.mat $(id002_DATA)DTI_image.nii.gz $(id002_DATA)12_slices.nii.gz `cat $(PROCESSING)002/13_0`

$(PROCESSING)002/7_in0.nii.gz: $(id002_DATA)DTI_image.nii.gz
	 ln -sf $(id002_DATA)DTI_image.nii.gz $(PROCESSING)002/7_in0.nii.gz

$(PROCESSING)002/7_in1.nii.gz: $(id002_DATA)12_slices.nii.gz
	 ln -sf $(id002_DATA)12_slices.nii.gz $(PROCESSING)002/7_in1.nii.gz

$(PROCESSING)002/7_in2: $(PROCESSING)002/13_0
	 ln -sf ../../$(PROCESSING)002/13_0 $(PROCESSING)002/7_in2

# Dependency tree for id003_sink16 below
#    ID   = 003
#    SINK = 16

#    visit to sink = RegDtiTo12, id = 003
.PHONEY: id003_sink16
id003_sink16: $(PROCESSING)003/7_0.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)003/7_0.nii.gz $(id003_DATA)results/RegDtiTo12.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

#    visit to module = flirt, id = 003
 %/003/7_0.nii.gz %/003/7_1.mat: %/003/7_in0.nii.gz %/003/7_in1.nii.gz %/003/7_in2
	~/dtiFitDummy/scripts/flirt.script $(PROCESSING)003/7_0.nii.gz $(PROCESSING)003/7_1.mat $(id003_DATA)DTI_image.nii.gz $(id003_DATA)12_slices.nii.gz `cat $(PROCESSING)003/13_0`

$(PROCESSING)003/7_in0.nii.gz: $(id003_DATA)DTI_image.nii.gz
	 ln -sf $(id003_DATA)DTI_image.nii.gz $(PROCESSING)003/7_in0.nii.gz

$(PROCESSING)003/7_in1.nii.gz: $(id003_DATA)12_slices.nii.gz
	 ln -sf $(id003_DATA)12_slices.nii.gz $(PROCESSING)003/7_in1.nii.gz

$(PROCESSING)003/7_in2: $(PROCESSING)003/13_0
	 ln -sf ../../$(PROCESSING)003/13_0 $(PROCESSING)003/7_in2

# Dependency tree for id004_sink16 below
#    ID   = 004
#    SINK = 16

#    visit to sink = RegDtiTo12, id = 004
.PHONEY: id004_sink16
id004_sink16: $(PROCESSING)004/7_0.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)004/7_0.nii.gz $(id004_DATA)results/RegDtiTo12.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

#    visit to module = flirt, id = 004
 %/004/7_0.nii.gz %/004/7_1.mat: %/004/7_in0.nii.gz %/004/7_in1.nii.gz %/004/7_in2
	~/dtiFitDummy/scripts/flirt.script $(PROCESSING)004/7_0.nii.gz $(PROCESSING)004/7_1.mat $(id004_DATA)DTI_image.nii.gz $(id004_DATA)12_slices.nii.gz `cat $(PROCESSING)004/13_0`

$(PROCESSING)004/7_in0.nii.gz: $(id004_DATA)DTI_image.nii.gz
	 ln -sf $(id004_DATA)DTI_image.nii.gz $(PROCESSING)004/7_in0.nii.gz

$(PROCESSING)004/7_in1.nii.gz: $(id004_DATA)12_slices.nii.gz
	 ln -sf $(id004_DATA)12_slices.nii.gz $(PROCESSING)004/7_in1.nii.gz

$(PROCESSING)004/7_in2: $(PROCESSING)004/13_0
	 ln -sf ../../$(PROCESSING)004/13_0 $(PROCESSING)004/7_in2

# Dependency tree for id005_sink16 below
#    ID   = 005
#    SINK = 16

#    visit to sink = RegDtiTo12, id = 005
.PHONEY: id005_sink16
id005_sink16: $(PROCESSING)005/7_0.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)005/7_0.nii.gz $(id005_DATA)results/RegDtiTo12.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

#    visit to module = flirt, id = 005
 %/005/7_0.nii.gz %/005/7_1.mat: %/005/7_in0.nii.gz %/005/7_in1.nii.gz %/005/7_in2
	~/dtiFitDummy/scripts/flirt.script $(PROCESSING)005/7_0.nii.gz $(PROCESSING)005/7_1.mat $(id005_DATA)DTI_image.nii.gz $(id005_DATA)12_slices.nii.gz `cat $(PROCESSING)005/13_0`

$(PROCESSING)005/7_in0.nii.gz: $(id005_DATA)DTI_image.nii.gz
	 ln -sf $(id005_DATA)DTI_image.nii.gz $(PROCESSING)005/7_in0.nii.gz

$(PROCESSING)005/7_in1.nii.gz: $(id005_DATA)12_slices.nii.gz
	 ln -sf $(id005_DATA)12_slices.nii.gz $(PROCESSING)005/7_in1.nii.gz

$(PROCESSING)005/7_in2: $(PROCESSING)005/13_0
	 ln -sf ../../$(PROCESSING)005/13_0 $(PROCESSING)005/7_in2

# Dependency tree for id006_sink16 below
#    ID   = 006
#    SINK = 16

#    visit to sink = RegDtiTo12, id = 006
.PHONEY: id006_sink16
id006_sink16: $(PROCESSING)006/7_0.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)006/7_0.nii.gz $(id006_DATA)results/RegDtiTo12.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

#    visit to module = flirt, id = 006
 %/006/7_0.nii.gz %/006/7_1.mat: %/006/7_in0.nii.gz %/006/7_in1.nii.gz %/006/7_in2
	~/dtiFitDummy/scripts/flirt.script $(PROCESSING)006/7_0.nii.gz $(PROCESSING)006/7_1.mat $(id006_DATA)DTI_image.nii.gz $(id006_DATA)12_slices.nii.gz `cat $(PROCESSING)006/13_0`

$(PROCESSING)006/7_in0.nii.gz: $(id006_DATA)DTI_image.nii.gz
	 ln -sf $(id006_DATA)DTI_image.nii.gz $(PROCESSING)006/7_in0.nii.gz

$(PROCESSING)006/7_in1.nii.gz: $(id006_DATA)12_slices.nii.gz
	 ln -sf $(id006_DATA)12_slices.nii.gz $(PROCESSING)006/7_in1.nii.gz

$(PROCESSING)006/7_in2: $(PROCESSING)006/13_0
	 ln -sf ../../$(PROCESSING)006/13_0 $(PROCESSING)006/7_in2

# Dependency tree for id007_sink16 below
#    ID   = 007
#    SINK = 16

#    visit to sink = RegDtiTo12, id = 007
.PHONEY: id007_sink16
id007_sink16: $(PROCESSING)007/7_0.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)007/7_0.nii.gz $(id007_DATA)results/RegDtiTo12.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

#    visit to module = flirt, id = 007
 %/007/7_0.nii.gz %/007/7_1.mat: %/007/7_in0.nii.gz %/007/7_in1.nii.gz %/007/7_in2
	~/dtiFitDummy/scripts/flirt.script $(PROCESSING)007/7_0.nii.gz $(PROCESSING)007/7_1.mat $(id007_DATA)DTI_image.nii.gz $(id007_DATA)12_slices.nii.gz `cat $(PROCESSING)007/13_0`

$(PROCESSING)007/7_in0.nii.gz: $(id007_DATA)DTI_image.nii.gz
	 ln -sf $(id007_DATA)DTI_image.nii.gz $(PROCESSING)007/7_in0.nii.gz

$(PROCESSING)007/7_in1.nii.gz: $(id007_DATA)12_slices.nii.gz
	 ln -sf $(id007_DATA)12_slices.nii.gz $(PROCESSING)007/7_in1.nii.gz

$(PROCESSING)007/7_in2: $(PROCESSING)007/13_0
	 ln -sf ../../$(PROCESSING)007/13_0 $(PROCESSING)007/7_in2

# Dependency tree for id008_sink16 below
#    ID   = 008
#    SINK = 16

#    visit to sink = RegDtiTo12, id = 008
.PHONEY: id008_sink16
id008_sink16: $(PROCESSING)008/7_0.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)008/7_0.nii.gz $(id008_DATA)results/RegDtiTo12.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

#    visit to module = flirt, id = 008
 %/008/7_0.nii.gz %/008/7_1.mat: %/008/7_in0.nii.gz %/008/7_in1.nii.gz %/008/7_in2
	~/dtiFitDummy/scripts/flirt.script $(PROCESSING)008/7_0.nii.gz $(PROCESSING)008/7_1.mat $(id008_DATA)DTI_image.nii.gz $(id008_DATA)12_slices.nii.gz `cat $(PROCESSING)008/13_0`

$(PROCESSING)008/7_in0.nii.gz: $(id008_DATA)DTI_image.nii.gz
	 ln -sf $(id008_DATA)DTI_image.nii.gz $(PROCESSING)008/7_in0.nii.gz

$(PROCESSING)008/7_in1.nii.gz: $(id008_DATA)12_slices.nii.gz
	 ln -sf $(id008_DATA)12_slices.nii.gz $(PROCESSING)008/7_in1.nii.gz

$(PROCESSING)008/7_in2: $(PROCESSING)008/13_0
	 ln -sf ../../$(PROCESSING)008/13_0 $(PROCESSING)008/7_in2

# Dependency tree for id009_sink16 below
#    ID   = 009
#    SINK = 16

#    visit to sink = RegDtiTo12, id = 009
.PHONEY: id009_sink16
id009_sink16: $(PROCESSING)009/7_0.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)009/7_0.nii.gz $(id009_DATA)results/RegDtiTo12.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

#    visit to module = flirt, id = 009
 %/009/7_0.nii.gz %/009/7_1.mat: %/009/7_in0.nii.gz %/009/7_in1.nii.gz %/009/7_in2
	~/dtiFitDummy/scripts/flirt.script $(PROCESSING)009/7_0.nii.gz $(PROCESSING)009/7_1.mat $(id009_DATA)DTI_image.nii.gz $(id009_DATA)12_slices.nii.gz `cat $(PROCESSING)009/13_0`

$(PROCESSING)009/7_in0.nii.gz: $(id009_DATA)DTI_image.nii.gz
	 ln -sf $(id009_DATA)DTI_image.nii.gz $(PROCESSING)009/7_in0.nii.gz

$(PROCESSING)009/7_in1.nii.gz: $(id009_DATA)12_slices.nii.gz
	 ln -sf $(id009_DATA)12_slices.nii.gz $(PROCESSING)009/7_in1.nii.gz

$(PROCESSING)009/7_in2: $(PROCESSING)009/13_0
	 ln -sf ../../$(PROCESSING)009/13_0 $(PROCESSING)009/7_in2

# Dependency tree for id010_sink16 below
#    ID   = 010
#    SINK = 16

#    visit to sink = RegDtiTo12, id = 010
.PHONEY: id010_sink16
id010_sink16: $(PROCESSING)010/7_0.nii.gz
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)010/7_0.nii.gz $(id010_DATA)results/RegDtiTo12.nii.gz
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

#    visit to module = flirt, id = 010
 %/010/7_0.nii.gz %/010/7_1.mat: %/010/7_in0.nii.gz %/010/7_in1.nii.gz %/010/7_in2
	~/dtiFitDummy/scripts/flirt.script $(PROCESSING)010/7_0.nii.gz $(PROCESSING)010/7_1.mat $(id010_DATA)DTI_image.nii.gz $(id010_DATA)12_slices.nii.gz `cat $(PROCESSING)010/13_0`

$(PROCESSING)010/7_in0.nii.gz: $(id010_DATA)DTI_image.nii.gz
	 ln -sf $(id010_DATA)DTI_image.nii.gz $(PROCESSING)010/7_in0.nii.gz

$(PROCESSING)010/7_in1.nii.gz: $(id010_DATA)12_slices.nii.gz
	 ln -sf $(id010_DATA)12_slices.nii.gz $(PROCESSING)010/7_in1.nii.gz

$(PROCESSING)010/7_in2: $(PROCESSING)010/13_0
	 ln -sf ../../$(PROCESSING)010/13_0 $(PROCESSING)010/7_in2

# Dependency tree for id001_sink17 below
#    ID   = 001
#    SINK = 17

#    visit to sink = M3, id = 001
.PHONEY: id001_sink17
id001_sink17: $(PROCESSING)001/7_1.mat
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)001/7_1.mat $(id001_DATA)results/M3.mat
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id002_sink17 below
#    ID   = 002
#    SINK = 17

#    visit to sink = M3, id = 002
.PHONEY: id002_sink17
id002_sink17: $(PROCESSING)002/7_1.mat
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)002/7_1.mat $(id002_DATA)results/M3.mat
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id003_sink17 below
#    ID   = 003
#    SINK = 17

#    visit to sink = M3, id = 003
.PHONEY: id003_sink17
id003_sink17: $(PROCESSING)003/7_1.mat
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)003/7_1.mat $(id003_DATA)results/M3.mat
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id004_sink17 below
#    ID   = 004
#    SINK = 17

#    visit to sink = M3, id = 004
.PHONEY: id004_sink17
id004_sink17: $(PROCESSING)004/7_1.mat
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)004/7_1.mat $(id004_DATA)results/M3.mat
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id005_sink17 below
#    ID   = 005
#    SINK = 17

#    visit to sink = M3, id = 005
.PHONEY: id005_sink17
id005_sink17: $(PROCESSING)005/7_1.mat
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)005/7_1.mat $(id005_DATA)results/M3.mat
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id006_sink17 below
#    ID   = 006
#    SINK = 17

#    visit to sink = M3, id = 006
.PHONEY: id006_sink17
id006_sink17: $(PROCESSING)006/7_1.mat
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)006/7_1.mat $(id006_DATA)results/M3.mat
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id007_sink17 below
#    ID   = 007
#    SINK = 17

#    visit to sink = M3, id = 007
.PHONEY: id007_sink17
id007_sink17: $(PROCESSING)007/7_1.mat
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)007/7_1.mat $(id007_DATA)results/M3.mat
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id008_sink17 below
#    ID   = 008
#    SINK = 17

#    visit to sink = M3, id = 008
.PHONEY: id008_sink17
id008_sink17: $(PROCESSING)008/7_1.mat
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)008/7_1.mat $(id008_DATA)results/M3.mat
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id009_sink17 below
#    ID   = 009
#    SINK = 17

#    visit to sink = M3, id = 009
.PHONEY: id009_sink17
id009_sink17: $(PROCESSING)009/7_1.mat
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)009/7_1.mat $(id009_DATA)results/M3.mat
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id010_sink17 below
#    ID   = 010
#    SINK = 17

#    visit to sink = M3, id = 010
.PHONEY: id010_sink17
id010_sink17: $(PROCESSING)010/7_1.mat
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)010/7_1.mat $(id010_DATA)results/M3.mat
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

# Dependency tree for id001_sink18 below
#    ID   = 001
#    SINK = 18

#    visit to sink = Mat4ToTemplate, id = 001
.PHONEY: id001_sink18
id001_sink18: $(PROCESSING)001/8_0.mat
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)001/8_0.mat $(id001_DATA)results/Mat4ToTemplate.mat
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

#    visit to module = catXfm, id = 001
$(PROCESSING)001/8_0.mat: $(PROCESSING)001/5_0.nii.gz $(PROCESSING)001/6_0.nii.gz
	~/dtiFitDummy/scripts/catXfm.script $(PROCESSING)001/8_0.mat $(PROCESSING)001/5_1.mat $(PROCESSING)001/6_1.mat

# Dependency tree for id002_sink18 below
#    ID   = 002
#    SINK = 18

#    visit to sink = Mat4ToTemplate, id = 002
.PHONEY: id002_sink18
id002_sink18: $(PROCESSING)002/8_0.mat
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)002/8_0.mat $(id002_DATA)results/Mat4ToTemplate.mat
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

#    visit to module = catXfm, id = 002
$(PROCESSING)002/8_0.mat: $(PROCESSING)002/5_0.nii.gz $(PROCESSING)002/6_0.nii.gz
	~/dtiFitDummy/scripts/catXfm.script $(PROCESSING)002/8_0.mat $(PROCESSING)002/5_1.mat $(PROCESSING)002/6_1.mat

# Dependency tree for id003_sink18 below
#    ID   = 003
#    SINK = 18

#    visit to sink = Mat4ToTemplate, id = 003
.PHONEY: id003_sink18
id003_sink18: $(PROCESSING)003/8_0.mat
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)003/8_0.mat $(id003_DATA)results/Mat4ToTemplate.mat
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

#    visit to module = catXfm, id = 003
$(PROCESSING)003/8_0.mat: $(PROCESSING)003/5_0.nii.gz $(PROCESSING)003/6_0.nii.gz
	~/dtiFitDummy/scripts/catXfm.script $(PROCESSING)003/8_0.mat $(PROCESSING)003/5_1.mat $(PROCESSING)003/6_1.mat

# Dependency tree for id004_sink18 below
#    ID   = 004
#    SINK = 18

#    visit to sink = Mat4ToTemplate, id = 004
.PHONEY: id004_sink18
id004_sink18: $(PROCESSING)004/8_0.mat
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)004/8_0.mat $(id004_DATA)results/Mat4ToTemplate.mat
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

#    visit to module = catXfm, id = 004
$(PROCESSING)004/8_0.mat: $(PROCESSING)004/5_0.nii.gz $(PROCESSING)004/6_0.nii.gz
	~/dtiFitDummy/scripts/catXfm.script $(PROCESSING)004/8_0.mat $(PROCESSING)004/5_1.mat $(PROCESSING)004/6_1.mat

# Dependency tree for id005_sink18 below
#    ID   = 005
#    SINK = 18

#    visit to sink = Mat4ToTemplate, id = 005
.PHONEY: id005_sink18
id005_sink18: $(PROCESSING)005/8_0.mat
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)005/8_0.mat $(id005_DATA)results/Mat4ToTemplate.mat
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

#    visit to module = catXfm, id = 005
$(PROCESSING)005/8_0.mat: $(PROCESSING)005/5_0.nii.gz $(PROCESSING)005/6_0.nii.gz
	~/dtiFitDummy/scripts/catXfm.script $(PROCESSING)005/8_0.mat $(PROCESSING)005/5_1.mat $(PROCESSING)005/6_1.mat

# Dependency tree for id006_sink18 below
#    ID   = 006
#    SINK = 18

#    visit to sink = Mat4ToTemplate, id = 006
.PHONEY: id006_sink18
id006_sink18: $(PROCESSING)006/8_0.mat
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)006/8_0.mat $(id006_DATA)results/Mat4ToTemplate.mat
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

#    visit to module = catXfm, id = 006
$(PROCESSING)006/8_0.mat: $(PROCESSING)006/5_0.nii.gz $(PROCESSING)006/6_0.nii.gz
	~/dtiFitDummy/scripts/catXfm.script $(PROCESSING)006/8_0.mat $(PROCESSING)006/5_1.mat $(PROCESSING)006/6_1.mat

# Dependency tree for id007_sink18 below
#    ID   = 007
#    SINK = 18

#    visit to sink = Mat4ToTemplate, id = 007
.PHONEY: id007_sink18
id007_sink18: $(PROCESSING)007/8_0.mat
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)007/8_0.mat $(id007_DATA)results/Mat4ToTemplate.mat
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

#    visit to module = catXfm, id = 007
$(PROCESSING)007/8_0.mat: $(PROCESSING)007/5_0.nii.gz $(PROCESSING)007/6_0.nii.gz
	~/dtiFitDummy/scripts/catXfm.script $(PROCESSING)007/8_0.mat $(PROCESSING)007/5_1.mat $(PROCESSING)007/6_1.mat

# Dependency tree for id008_sink18 below
#    ID   = 008
#    SINK = 18

#    visit to sink = Mat4ToTemplate, id = 008
.PHONEY: id008_sink18
id008_sink18: $(PROCESSING)008/8_0.mat
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)008/8_0.mat $(id008_DATA)results/Mat4ToTemplate.mat
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

#    visit to module = catXfm, id = 008
$(PROCESSING)008/8_0.mat: $(PROCESSING)008/5_0.nii.gz $(PROCESSING)008/6_0.nii.gz
	~/dtiFitDummy/scripts/catXfm.script $(PROCESSING)008/8_0.mat $(PROCESSING)008/5_1.mat $(PROCESSING)008/6_1.mat

# Dependency tree for id009_sink18 below
#    ID   = 009
#    SINK = 18

#    visit to sink = Mat4ToTemplate, id = 009
.PHONEY: id009_sink18
id009_sink18: $(PROCESSING)009/8_0.mat
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)009/8_0.mat $(id009_DATA)results/Mat4ToTemplate.mat
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

#    visit to module = catXfm, id = 009
$(PROCESSING)009/8_0.mat: $(PROCESSING)009/5_0.nii.gz $(PROCESSING)009/6_0.nii.gz
	~/dtiFitDummy/scripts/catXfm.script $(PROCESSING)009/8_0.mat $(PROCESSING)009/5_1.mat $(PROCESSING)009/6_1.mat

# Dependency tree for id010_sink18 below
#    ID   = 010
#    SINK = 18

#    visit to sink = Mat4ToTemplate, id = 010
.PHONEY: id010_sink18
id010_sink18: $(PROCESSING)010/8_0.mat
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)010/8_0.mat $(id010_DATA)results/Mat4ToTemplate.mat
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

#    visit to module = catXfm, id = 010
$(PROCESSING)010/8_0.mat: $(PROCESSING)010/5_0.nii.gz $(PROCESSING)010/6_0.nii.gz
	~/dtiFitDummy/scripts/catXfm.script $(PROCESSING)010/8_0.mat $(PROCESSING)010/5_1.mat $(PROCESSING)010/6_1.mat

# Dependency tree for id001_sink19 below
#    ID   = 001
#    SINK = 19

#    visit to sink = MatDtiToTemplate, id = 001
.PHONEY: id001_sink19
id001_sink19: $(PROCESSING)001/9_0.mat
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)001/9_0.mat $(id001_DATA)results/MatDtiToTemplate.mat
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

#    visit to module = catXfm, id = 001
$(PROCESSING)001/9_0.mat: $(PROCESSING)001/7_0.nii.gz $(PROCESSING)001/6_0.nii.gz
	~/dtiFitDummy/scripts/catXfm.script $(PROCESSING)001/9_0.mat $(PROCESSING)001/7_1.mat $(PROCESSING)001/6_1.mat

# Dependency tree for id002_sink19 below
#    ID   = 002
#    SINK = 19

#    visit to sink = MatDtiToTemplate, id = 002
.PHONEY: id002_sink19
id002_sink19: $(PROCESSING)002/9_0.mat
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)002/9_0.mat $(id002_DATA)results/MatDtiToTemplate.mat
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

#    visit to module = catXfm, id = 002
$(PROCESSING)002/9_0.mat: $(PROCESSING)002/7_0.nii.gz $(PROCESSING)002/6_0.nii.gz
	~/dtiFitDummy/scripts/catXfm.script $(PROCESSING)002/9_0.mat $(PROCESSING)002/7_1.mat $(PROCESSING)002/6_1.mat

# Dependency tree for id003_sink19 below
#    ID   = 003
#    SINK = 19

#    visit to sink = MatDtiToTemplate, id = 003
.PHONEY: id003_sink19
id003_sink19: $(PROCESSING)003/9_0.mat
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)003/9_0.mat $(id003_DATA)results/MatDtiToTemplate.mat
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

#    visit to module = catXfm, id = 003
$(PROCESSING)003/9_0.mat: $(PROCESSING)003/7_0.nii.gz $(PROCESSING)003/6_0.nii.gz
	~/dtiFitDummy/scripts/catXfm.script $(PROCESSING)003/9_0.mat $(PROCESSING)003/7_1.mat $(PROCESSING)003/6_1.mat

# Dependency tree for id004_sink19 below
#    ID   = 004
#    SINK = 19

#    visit to sink = MatDtiToTemplate, id = 004
.PHONEY: id004_sink19
id004_sink19: $(PROCESSING)004/9_0.mat
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)004/9_0.mat $(id004_DATA)results/MatDtiToTemplate.mat
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

#    visit to module = catXfm, id = 004
$(PROCESSING)004/9_0.mat: $(PROCESSING)004/7_0.nii.gz $(PROCESSING)004/6_0.nii.gz
	~/dtiFitDummy/scripts/catXfm.script $(PROCESSING)004/9_0.mat $(PROCESSING)004/7_1.mat $(PROCESSING)004/6_1.mat

# Dependency tree for id005_sink19 below
#    ID   = 005
#    SINK = 19

#    visit to sink = MatDtiToTemplate, id = 005
.PHONEY: id005_sink19
id005_sink19: $(PROCESSING)005/9_0.mat
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)005/9_0.mat $(id005_DATA)results/MatDtiToTemplate.mat
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

#    visit to module = catXfm, id = 005
$(PROCESSING)005/9_0.mat: $(PROCESSING)005/7_0.nii.gz $(PROCESSING)005/6_0.nii.gz
	~/dtiFitDummy/scripts/catXfm.script $(PROCESSING)005/9_0.mat $(PROCESSING)005/7_1.mat $(PROCESSING)005/6_1.mat

# Dependency tree for id006_sink19 below
#    ID   = 006
#    SINK = 19

#    visit to sink = MatDtiToTemplate, id = 006
.PHONEY: id006_sink19
id006_sink19: $(PROCESSING)006/9_0.mat
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)006/9_0.mat $(id006_DATA)results/MatDtiToTemplate.mat
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

#    visit to module = catXfm, id = 006
$(PROCESSING)006/9_0.mat: $(PROCESSING)006/7_0.nii.gz $(PROCESSING)006/6_0.nii.gz
	~/dtiFitDummy/scripts/catXfm.script $(PROCESSING)006/9_0.mat $(PROCESSING)006/7_1.mat $(PROCESSING)006/6_1.mat

# Dependency tree for id007_sink19 below
#    ID   = 007
#    SINK = 19

#    visit to sink = MatDtiToTemplate, id = 007
.PHONEY: id007_sink19
id007_sink19: $(PROCESSING)007/9_0.mat
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)007/9_0.mat $(id007_DATA)results/MatDtiToTemplate.mat
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

#    visit to module = catXfm, id = 007
$(PROCESSING)007/9_0.mat: $(PROCESSING)007/7_0.nii.gz $(PROCESSING)007/6_0.nii.gz
	~/dtiFitDummy/scripts/catXfm.script $(PROCESSING)007/9_0.mat $(PROCESSING)007/7_1.mat $(PROCESSING)007/6_1.mat

# Dependency tree for id008_sink19 below
#    ID   = 008
#    SINK = 19

#    visit to sink = MatDtiToTemplate, id = 008
.PHONEY: id008_sink19
id008_sink19: $(PROCESSING)008/9_0.mat
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)008/9_0.mat $(id008_DATA)results/MatDtiToTemplate.mat
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

#    visit to module = catXfm, id = 008
$(PROCESSING)008/9_0.mat: $(PROCESSING)008/7_0.nii.gz $(PROCESSING)008/6_0.nii.gz
	~/dtiFitDummy/scripts/catXfm.script $(PROCESSING)008/9_0.mat $(PROCESSING)008/7_1.mat $(PROCESSING)008/6_1.mat

# Dependency tree for id009_sink19 below
#    ID   = 009
#    SINK = 19

#    visit to sink = MatDtiToTemplate, id = 009
.PHONEY: id009_sink19
id009_sink19: $(PROCESSING)009/9_0.mat
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)009/9_0.mat $(id009_DATA)results/MatDtiToTemplate.mat
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

#    visit to module = catXfm, id = 009
$(PROCESSING)009/9_0.mat: $(PROCESSING)009/7_0.nii.gz $(PROCESSING)009/6_0.nii.gz
	~/dtiFitDummy/scripts/catXfm.script $(PROCESSING)009/9_0.mat $(PROCESSING)009/7_1.mat $(PROCESSING)009/6_1.mat

# Dependency tree for id010_sink19 below
#    ID   = 010
#    SINK = 19

#    visit to sink = MatDtiToTemplate, id = 010
.PHONEY: id010_sink19
id010_sink19: $(PROCESSING)010/9_0.mat
	@echo "------------------------------------"
	@ $(eval START_TIME := $(shell date))
	@ echo "START_TIME = "$(START_TIME)
	cp $(PROCESSING)010/9_0.mat $(id010_DATA)results/MatDtiToTemplate.mat
	@ $(eval STOP_TIME := $(shell date))
	@ echo "STOP_TIME = "$(STOP_TIME)
	@echo "------------------------------------"

#    visit to module = catXfm, id = 010
$(PROCESSING)010/9_0.mat: $(PROCESSING)010/7_0.nii.gz $(PROCESSING)010/6_0.nii.gz
	~/dtiFitDummy/scripts/catXfm.script $(PROCESSING)010/9_0.mat $(PROCESSING)010/7_1.mat $(PROCESSING)010/6_1.mat

#-----------------------------------    CLEAN UP    ------------------------------------

# Declare cleaning targets
.PHONY: cleanall cleanerror cleanprocess

cleanall: cleanerror cleanprocess

cleanerror:
	rm -f $(ERRORS)* 

cleanprocess:
	rm -f $(targetList) $(intermediateList) #===$(PROCESSING)*/* 

#-------------------------------    PRINTING TARGETS    --------------------------------

# Declare printing targets
.PHONY: target_ratio total_ratio

targetList = $(id001_DATA)results/FA.nii.gz $(id002_DATA)results/FA.nii.gz $(id003_DATA)results/FA.nii.gz $(id004_DATA)results/FA.nii.gz $(id005_DATA)results/FA.nii.gz $(id006_DATA)results/FA.nii.gz $(id007_DATA)results/FA.nii.gz $(id008_DATA)results/FA.nii.gz $(id009_DATA)results/FA.nii.gz $(id010_DATA)results/FA.nii.gz $(id001_DATA)results/L1.nii.gz $(id002_DATA)results/L1.nii.gz $(id003_DATA)results/L1.nii.gz $(id004_DATA)results/L1.nii.gz $(id005_DATA)results/L1.nii.gz $(id006_DATA)results/L1.nii.gz $(id007_DATA)results/L1.nii.gz $(id008_DATA)results/L1.nii.gz $(id009_DATA)results/L1.nii.gz $(id010_DATA)results/L1.nii.gz $(id001_DATA)results/L2.nii.gz $(id002_DATA)results/L2.nii.gz $(id003_DATA)results/L2.nii.gz $(id004_DATA)results/L2.nii.gz $(id005_DATA)results/L2.nii.gz $(id006_DATA)results/L2.nii.gz $(id007_DATA)results/L2.nii.gz $(id008_DATA)results/L2.nii.gz $(id009_DATA)results/L2.nii.gz $(id010_DATA)results/L2.nii.gz $(id001_DATA)results/L3.nii.gz $(id002_DATA)results/L3.nii.gz $(id003_DATA)results/L3.nii.gz $(id004_DATA)results/L3.nii.gz $(id005_DATA)results/L3.nii.gz $(id006_DATA)results/L3.nii.gz $(id007_DATA)results/L3.nii.gz $(id008_DATA)results/L3.nii.gz $(id009_DATA)results/L3.nii.gz $(id010_DATA)results/L3.nii.gz $(id001_DATA)results/MD.nii.gz $(id002_DATA)results/MD.nii.gz $(id003_DATA)results/MD.nii.gz $(id004_DATA)results/MD.nii.gz $(id005_DATA)results/MD.nii.gz $(id006_DATA)results/MD.nii.gz $(id007_DATA)results/MD.nii.gz $(id008_DATA)results/MD.nii.gz $(id009_DATA)results/MD.nii.gz $(id010_DATA)results/MD.nii.gz $(id001_DATA)results/MO.nii.gz $(id002_DATA)results/MO.nii.gz $(id003_DATA)results/MO.nii.gz $(id004_DATA)results/MO.nii.gz $(id005_DATA)results/MO.nii.gz $(id006_DATA)results/MO.nii.gz $(id007_DATA)results/MO.nii.gz $(id008_DATA)results/MO.nii.gz $(id009_DATA)results/MO.nii.gz $(id010_DATA)results/MO.nii.gz $(id001_DATA)results/S0.nii.gz $(id002_DATA)results/S0.nii.gz $(id003_DATA)results/S0.nii.gz $(id004_DATA)results/S0.nii.gz $(id005_DATA)results/S0.nii.gz $(id006_DATA)results/S0.nii.gz $(id007_DATA)results/S0.nii.gz $(id008_DATA)results/S0.nii.gz $(id009_DATA)results/S0.nii.gz $(id010_DATA)results/S0.nii.gz $(id001_DATA)results/V1.nii.gz $(id002_DATA)results/V1.nii.gz $(id003_DATA)results/V1.nii.gz $(id004_DATA)results/V1.nii.gz $(id005_DATA)results/V1.nii.gz $(id006_DATA)results/V1.nii.gz $(id007_DATA)results/V1.nii.gz $(id008_DATA)results/V1.nii.gz $(id009_DATA)results/V1.nii.gz $(id010_DATA)results/V1.nii.gz $(id001_DATA)results/V2.nii.gz $(id002_DATA)results/V2.nii.gz $(id003_DATA)results/V2.nii.gz $(id004_DATA)results/V2.nii.gz $(id005_DATA)results/V2.nii.gz $(id006_DATA)results/V2.nii.gz $(id007_DATA)results/V2.nii.gz $(id008_DATA)results/V2.nii.gz $(id009_DATA)results/V2.nii.gz $(id010_DATA)results/V2.nii.gz $(id001_DATA)results/V3.nii.gz $(id002_DATA)results/V3.nii.gz $(id003_DATA)results/V3.nii.gz $(id004_DATA)results/V3.nii.gz $(id005_DATA)results/V3.nii.gz $(id006_DATA)results/V3.nii.gz $(id007_DATA)results/V3.nii.gz $(id008_DATA)results/V3.nii.gz $(id009_DATA)results/V3.nii.gz $(id010_DATA)results/V3.nii.gz $(id001_DATA)results/M1.mat $(id002_DATA)results/M1.mat $(id003_DATA)results/M1.mat $(id004_DATA)results/M1.mat $(id005_DATA)results/M1.mat $(id006_DATA)results/M1.mat $(id007_DATA)results/M1.mat $(id008_DATA)results/M1.mat $(id009_DATA)results/M1.mat $(id010_DATA)results/M1.mat $(id001_DATA)results/Reg4To12.nii.gz $(id002_DATA)results/Reg4To12.nii.gz $(id003_DATA)results/Reg4To12.nii.gz $(id004_DATA)results/Reg4To12.nii.gz $(id005_DATA)results/Reg4To12.nii.gz $(id006_DATA)results/Reg4To12.nii.gz $(id007_DATA)results/Reg4To12.nii.gz $(id008_DATA)results/Reg4To12.nii.gz $(id009_DATA)results/Reg4To12.nii.gz $(id010_DATA)results/Reg4To12.nii.gz $(id001_DATA)results/M2.mat $(id002_DATA)results/M2.mat $(id003_DATA)results/M2.mat $(id004_DATA)results/M2.mat $(id005_DATA)results/M2.mat $(id006_DATA)results/M2.mat $(id007_DATA)results/M2.mat $(id008_DATA)results/M2.mat $(id009_DATA)results/M2.mat $(id010_DATA)results/M2.mat $(id001_DATA)results/Reg12ToTemplate.nii.gz $(id002_DATA)results/Reg12ToTemplate.nii.gz $(id003_DATA)results/Reg12ToTemplate.nii.gz $(id004_DATA)results/Reg12ToTemplate.nii.gz $(id005_DATA)results/Reg12ToTemplate.nii.gz $(id006_DATA)results/Reg12ToTemplate.nii.gz $(id007_DATA)results/Reg12ToTemplate.nii.gz $(id008_DATA)results/Reg12ToTemplate.nii.gz $(id009_DATA)results/Reg12ToTemplate.nii.gz $(id010_DATA)results/Reg12ToTemplate.nii.gz $(id001_DATA)results/RegDtiTo12.nii.gz $(id002_DATA)results/RegDtiTo12.nii.gz $(id003_DATA)results/RegDtiTo12.nii.gz $(id004_DATA)results/RegDtiTo12.nii.gz $(id005_DATA)results/RegDtiTo12.nii.gz $(id006_DATA)results/RegDtiTo12.nii.gz $(id007_DATA)results/RegDtiTo12.nii.gz $(id008_DATA)results/RegDtiTo12.nii.gz $(id009_DATA)results/RegDtiTo12.nii.gz $(id010_DATA)results/RegDtiTo12.nii.gz $(id001_DATA)results/M3.mat $(id002_DATA)results/M3.mat $(id003_DATA)results/M3.mat $(id004_DATA)results/M3.mat $(id005_DATA)results/M3.mat $(id006_DATA)results/M3.mat $(id007_DATA)results/M3.mat $(id008_DATA)results/M3.mat $(id009_DATA)results/M3.mat $(id010_DATA)results/M3.mat $(id001_DATA)results/Mat4ToTemplate.mat $(id002_DATA)results/Mat4ToTemplate.mat $(id003_DATA)results/Mat4ToTemplate.mat $(id004_DATA)results/Mat4ToTemplate.mat $(id005_DATA)results/Mat4ToTemplate.mat $(id006_DATA)results/Mat4ToTemplate.mat $(id007_DATA)results/Mat4ToTemplate.mat $(id008_DATA)results/Mat4ToTemplate.mat $(id009_DATA)results/Mat4ToTemplate.mat $(id010_DATA)results/Mat4ToTemplate.mat $(id001_DATA)results/MatDtiToTemplate.mat $(id002_DATA)results/MatDtiToTemplate.mat $(id003_DATA)results/MatDtiToTemplate.mat $(id004_DATA)results/MatDtiToTemplate.mat $(id005_DATA)results/MatDtiToTemplate.mat $(id006_DATA)results/MatDtiToTemplate.mat $(id007_DATA)results/MatDtiToTemplate.mat $(id008_DATA)results/MatDtiToTemplate.mat $(id009_DATA)results/MatDtiToTemplate.mat $(id010_DATA)results/MatDtiToTemplate.mat
intermediateList =  $(PROCESSING)001/3_0.nii.gz $(PROCESSING)001/3_1.nii.gz $(PROCESSING)001/3_2.nii.gz $(PROCESSING)001/3_3.nii.gz $(PROCESSING)001/3_4.nii.gz $(PROCESSING)001/3_5.nii.gz $(PROCESSING)001/3_6.nii.gz $(PROCESSING)001/3_7.nii.gz $(PROCESSING)001/3_8.nii.gz $(PROCESSING)001/3_9.nii.gz $(PROCESSING)001/3_in0.nii.gz $(PROCESSING)001/3_in1.nii.gz $(PROCESSING)001/3_in2.txt $(PROCESSING)001/3_in3.txt $(PROCESSING)001/4_0.nii.gz $(PROCESSING)001/1_0.txt $(PROCESSING)001/2_0.txt  $(PROCESSING)002/3_0.nii.gz $(PROCESSING)002/3_1.nii.gz $(PROCESSING)002/3_2.nii.gz $(PROCESSING)002/3_3.nii.gz $(PROCESSING)002/3_4.nii.gz $(PROCESSING)002/3_5.nii.gz $(PROCESSING)002/3_6.nii.gz $(PROCESSING)002/3_7.nii.gz $(PROCESSING)002/3_8.nii.gz $(PROCESSING)002/3_9.nii.gz $(PROCESSING)002/3_in0.nii.gz $(PROCESSING)002/3_in1.nii.gz $(PROCESSING)002/3_in2.txt $(PROCESSING)002/3_in3.txt $(PROCESSING)002/4_0.nii.gz $(PROCESSING)002/1_0.txt $(PROCESSING)002/2_0.txt  $(PROCESSING)003/3_0.nii.gz $(PROCESSING)003/3_1.nii.gz $(PROCESSING)003/3_2.nii.gz $(PROCESSING)003/3_3.nii.gz $(PROCESSING)003/3_4.nii.gz $(PROCESSING)003/3_5.nii.gz $(PROCESSING)003/3_6.nii.gz $(PROCESSING)003/3_7.nii.gz $(PROCESSING)003/3_8.nii.gz $(PROCESSING)003/3_9.nii.gz $(PROCESSING)003/3_in0.nii.gz $(PROCESSING)003/3_in1.nii.gz $(PROCESSING)003/3_in2.txt $(PROCESSING)003/3_in3.txt $(PROCESSING)003/4_0.nii.gz $(PROCESSING)003/1_0.txt $(PROCESSING)003/2_0.txt  $(PROCESSING)004/3_0.nii.gz $(PROCESSING)004/3_1.nii.gz $(PROCESSING)004/3_2.nii.gz $(PROCESSING)004/3_3.nii.gz $(PROCESSING)004/3_4.nii.gz $(PROCESSING)004/3_5.nii.gz $(PROCESSING)004/3_6.nii.gz $(PROCESSING)004/3_7.nii.gz $(PROCESSING)004/3_8.nii.gz $(PROCESSING)004/3_9.nii.gz $(PROCESSING)004/3_in0.nii.gz $(PROCESSING)004/3_in1.nii.gz $(PROCESSING)004/3_in2.txt $(PROCESSING)004/3_in3.txt $(PROCESSING)004/4_0.nii.gz $(PROCESSING)004/1_0.txt $(PROCESSING)004/2_0.txt  $(PROCESSING)005/3_0.nii.gz $(PROCESSING)005/3_1.nii.gz $(PROCESSING)005/3_2.nii.gz $(PROCESSING)005/3_3.nii.gz $(PROCESSING)005/3_4.nii.gz $(PROCESSING)005/3_5.nii.gz $(PROCESSING)005/3_6.nii.gz $(PROCESSING)005/3_7.nii.gz $(PROCESSING)005/3_8.nii.gz $(PROCESSING)005/3_9.nii.gz $(PROCESSING)005/3_in0.nii.gz $(PROCESSING)005/3_in1.nii.gz $(PROCESSING)005/3_in2.txt $(PROCESSING)005/3_in3.txt $(PROCESSING)005/4_0.nii.gz $(PROCESSING)005/1_0.txt $(PROCESSING)005/2_0.txt  $(PROCESSING)006/3_0.nii.gz $(PROCESSING)006/3_1.nii.gz $(PROCESSING)006/3_2.nii.gz $(PROCESSING)006/3_3.nii.gz $(PROCESSING)006/3_4.nii.gz $(PROCESSING)006/3_5.nii.gz $(PROCESSING)006/3_6.nii.gz $(PROCESSING)006/3_7.nii.gz $(PROCESSING)006/3_8.nii.gz $(PROCESSING)006/3_9.nii.gz $(PROCESSING)006/3_in0.nii.gz $(PROCESSING)006/3_in1.nii.gz $(PROCESSING)006/3_in2.txt $(PROCESSING)006/3_in3.txt $(PROCESSING)006/4_0.nii.gz $(PROCESSING)006/1_0.txt $(PROCESSING)006/2_0.txt  $(PROCESSING)007/3_0.nii.gz $(PROCESSING)007/3_1.nii.gz $(PROCESSING)007/3_2.nii.gz $(PROCESSING)007/3_3.nii.gz $(PROCESSING)007/3_4.nii.gz $(PROCESSING)007/3_5.nii.gz $(PROCESSING)007/3_6.nii.gz $(PROCESSING)007/3_7.nii.gz $(PROCESSING)007/3_8.nii.gz $(PROCESSING)007/3_9.nii.gz $(PROCESSING)007/3_in0.nii.gz $(PROCESSING)007/3_in1.nii.gz $(PROCESSING)007/3_in2.txt $(PROCESSING)007/3_in3.txt $(PROCESSING)007/4_0.nii.gz $(PROCESSING)007/1_0.txt $(PROCESSING)007/2_0.txt  $(PROCESSING)008/3_0.nii.gz $(PROCESSING)008/3_1.nii.gz $(PROCESSING)008/3_2.nii.gz $(PROCESSING)008/3_3.nii.gz $(PROCESSING)008/3_4.nii.gz $(PROCESSING)008/3_5.nii.gz $(PROCESSING)008/3_6.nii.gz $(PROCESSING)008/3_7.nii.gz $(PROCESSING)008/3_8.nii.gz $(PROCESSING)008/3_9.nii.gz $(PROCESSING)008/3_in0.nii.gz $(PROCESSING)008/3_in1.nii.gz $(PROCESSING)008/3_in2.txt $(PROCESSING)008/3_in3.txt $(PROCESSING)008/4_0.nii.gz $(PROCESSING)008/1_0.txt $(PROCESSING)008/2_0.txt  $(PROCESSING)009/3_0.nii.gz $(PROCESSING)009/3_1.nii.gz $(PROCESSING)009/3_2.nii.gz $(PROCESSING)009/3_3.nii.gz $(PROCESSING)009/3_4.nii.gz $(PROCESSING)009/3_5.nii.gz $(PROCESSING)009/3_6.nii.gz $(PROCESSING)009/3_7.nii.gz $(PROCESSING)009/3_8.nii.gz $(PROCESSING)009/3_9.nii.gz $(PROCESSING)009/3_in0.nii.gz $(PROCESSING)009/3_in1.nii.gz $(PROCESSING)009/3_in2.txt $(PROCESSING)009/3_in3.txt $(PROCESSING)009/4_0.nii.gz $(PROCESSING)009/1_0.txt $(PROCESSING)009/2_0.txt  $(PROCESSING)010/3_0.nii.gz $(PROCESSING)010/3_1.nii.gz $(PROCESSING)010/3_2.nii.gz $(PROCESSING)010/3_3.nii.gz $(PROCESSING)010/3_4.nii.gz $(PROCESSING)010/3_5.nii.gz $(PROCESSING)010/3_6.nii.gz $(PROCESSING)010/3_7.nii.gz $(PROCESSING)010/3_8.nii.gz $(PROCESSING)010/3_9.nii.gz $(PROCESSING)010/3_in0.nii.gz $(PROCESSING)010/3_in1.nii.gz $(PROCESSING)010/3_in2.txt $(PROCESSING)010/3_in3.txt $(PROCESSING)010/4_0.nii.gz $(PROCESSING)010/1_0.txt $(PROCESSING)010/2_0.txt                                                                                                      $(PROCESSING)001/5_0.nii.gz $(PROCESSING)001/5_1.mat $(PROCESSING)001/5_in0.nii.gz $(PROCESSING)001/5_in1.nii.gz $(PROCESSING)001/5_in2  $(PROCESSING)002/5_0.nii.gz $(PROCESSING)002/5_1.mat $(PROCESSING)002/5_in0.nii.gz $(PROCESSING)002/5_in1.nii.gz $(PROCESSING)002/5_in2  $(PROCESSING)003/5_0.nii.gz $(PROCESSING)003/5_1.mat $(PROCESSING)003/5_in0.nii.gz $(PROCESSING)003/5_in1.nii.gz $(PROCESSING)003/5_in2  $(PROCESSING)004/5_0.nii.gz $(PROCESSING)004/5_1.mat $(PROCESSING)004/5_in0.nii.gz $(PROCESSING)004/5_in1.nii.gz $(PROCESSING)004/5_in2  $(PROCESSING)005/5_0.nii.gz $(PROCESSING)005/5_1.mat $(PROCESSING)005/5_in0.nii.gz $(PROCESSING)005/5_in1.nii.gz $(PROCESSING)005/5_in2  $(PROCESSING)006/5_0.nii.gz $(PROCESSING)006/5_1.mat $(PROCESSING)006/5_in0.nii.gz $(PROCESSING)006/5_in1.nii.gz $(PROCESSING)006/5_in2  $(PROCESSING)007/5_0.nii.gz $(PROCESSING)007/5_1.mat $(PROCESSING)007/5_in0.nii.gz $(PROCESSING)007/5_in1.nii.gz $(PROCESSING)007/5_in2  $(PROCESSING)008/5_0.nii.gz $(PROCESSING)008/5_1.mat $(PROCESSING)008/5_in0.nii.gz $(PROCESSING)008/5_in1.nii.gz $(PROCESSING)008/5_in2  $(PROCESSING)009/5_0.nii.gz $(PROCESSING)009/5_1.mat $(PROCESSING)009/5_in0.nii.gz $(PROCESSING)009/5_in1.nii.gz $(PROCESSING)009/5_in2  $(PROCESSING)010/5_0.nii.gz $(PROCESSING)010/5_1.mat $(PROCESSING)010/5_in0.nii.gz $(PROCESSING)010/5_in1.nii.gz $(PROCESSING)010/5_in2            $(PROCESSING)001/6_0.nii.gz $(PROCESSING)001/6_1.mat $(PROCESSING)001/6_in0.nii.gz $(PROCESSING)001/6_in1.nii.gz $(PROCESSING)001/6_in2  $(PROCESSING)002/6_0.nii.gz $(PROCESSING)002/6_1.mat $(PROCESSING)002/6_in0.nii.gz $(PROCESSING)002/6_in1.nii.gz $(PROCESSING)002/6_in2  $(PROCESSING)003/6_0.nii.gz $(PROCESSING)003/6_1.mat $(PROCESSING)003/6_in0.nii.gz $(PROCESSING)003/6_in1.nii.gz $(PROCESSING)003/6_in2  $(PROCESSING)004/6_0.nii.gz $(PROCESSING)004/6_1.mat $(PROCESSING)004/6_in0.nii.gz $(PROCESSING)004/6_in1.nii.gz $(PROCESSING)004/6_in2  $(PROCESSING)005/6_0.nii.gz $(PROCESSING)005/6_1.mat $(PROCESSING)005/6_in0.nii.gz $(PROCESSING)005/6_in1.nii.gz $(PROCESSING)005/6_in2  $(PROCESSING)006/6_0.nii.gz $(PROCESSING)006/6_1.mat $(PROCESSING)006/6_in0.nii.gz $(PROCESSING)006/6_in1.nii.gz $(PROCESSING)006/6_in2  $(PROCESSING)007/6_0.nii.gz $(PROCESSING)007/6_1.mat $(PROCESSING)007/6_in0.nii.gz $(PROCESSING)007/6_in1.nii.gz $(PROCESSING)007/6_in2  $(PROCESSING)008/6_0.nii.gz $(PROCESSING)008/6_1.mat $(PROCESSING)008/6_in0.nii.gz $(PROCESSING)008/6_in1.nii.gz $(PROCESSING)008/6_in2  $(PROCESSING)009/6_0.nii.gz $(PROCESSING)009/6_1.mat $(PROCESSING)009/6_in0.nii.gz $(PROCESSING)009/6_in1.nii.gz $(PROCESSING)009/6_in2  $(PROCESSING)010/6_0.nii.gz $(PROCESSING)010/6_1.mat $(PROCESSING)010/6_in0.nii.gz $(PROCESSING)010/6_in1.nii.gz $(PROCESSING)010/6_in2  $(PROCESSING)001/7_0.nii.gz $(PROCESSING)001/7_1.mat $(PROCESSING)001/7_in0.nii.gz $(PROCESSING)001/7_in1.nii.gz $(PROCESSING)001/7_in2  $(PROCESSING)002/7_0.nii.gz $(PROCESSING)002/7_1.mat $(PROCESSING)002/7_in0.nii.gz $(PROCESSING)002/7_in1.nii.gz $(PROCESSING)002/7_in2  $(PROCESSING)003/7_0.nii.gz $(PROCESSING)003/7_1.mat $(PROCESSING)003/7_in0.nii.gz $(PROCESSING)003/7_in1.nii.gz $(PROCESSING)003/7_in2  $(PROCESSING)004/7_0.nii.gz $(PROCESSING)004/7_1.mat $(PROCESSING)004/7_in0.nii.gz $(PROCESSING)004/7_in1.nii.gz $(PROCESSING)004/7_in2  $(PROCESSING)005/7_0.nii.gz $(PROCESSING)005/7_1.mat $(PROCESSING)005/7_in0.nii.gz $(PROCESSING)005/7_in1.nii.gz $(PROCESSING)005/7_in2  $(PROCESSING)006/7_0.nii.gz $(PROCESSING)006/7_1.mat $(PROCESSING)006/7_in0.nii.gz $(PROCESSING)006/7_in1.nii.gz $(PROCESSING)006/7_in2  $(PROCESSING)007/7_0.nii.gz $(PROCESSING)007/7_1.mat $(PROCESSING)007/7_in0.nii.gz $(PROCESSING)007/7_in1.nii.gz $(PROCESSING)007/7_in2  $(PROCESSING)008/7_0.nii.gz $(PROCESSING)008/7_1.mat $(PROCESSING)008/7_in0.nii.gz $(PROCESSING)008/7_in1.nii.gz $(PROCESSING)008/7_in2  $(PROCESSING)009/7_0.nii.gz $(PROCESSING)009/7_1.mat $(PROCESSING)009/7_in0.nii.gz $(PROCESSING)009/7_in1.nii.gz $(PROCESSING)009/7_in2  $(PROCESSING)010/7_0.nii.gz $(PROCESSING)010/7_1.mat $(PROCESSING)010/7_in0.nii.gz $(PROCESSING)010/7_in1.nii.gz $(PROCESSING)010/7_in2            $(PROCESSING)001/8_0.mat  $(PROCESSING)002/8_0.mat  $(PROCESSING)003/8_0.mat  $(PROCESSING)004/8_0.mat  $(PROCESSING)005/8_0.mat  $(PROCESSING)006/8_0.mat  $(PROCESSING)007/8_0.mat  $(PROCESSING)008/8_0.mat  $(PROCESSING)009/8_0.mat  $(PROCESSING)010/8_0.mat  $(PROCESSING)001/9_0.mat  $(PROCESSING)002/9_0.mat  $(PROCESSING)003/9_0.mat  $(PROCESSING)004/9_0.mat  $(PROCESSING)005/9_0.mat  $(PROCESSING)006/9_0.mat  $(PROCESSING)007/9_0.mat  $(PROCESSING)008/9_0.mat  $(PROCESSING)009/9_0.mat  $(PROCESSING)010/9_0.mat

numeratorTarget = 0
denominatorTarget = 0
numeratorIntermediate = 0
denominatorIntermediate = 0

target_ratio:
	$(eval numeratorTarget = $(shell ls $(targetList) | uniq | wc -l))
	$(eval denominatorTarget = $(shell echo $(targetList) | xargs -n1 | sort -u | wc -l))
	@echo $(numeratorTarget) / $(denominatorTarget)

intermediate_ratio:
	$(eval numeratorIntermediate = $(shell ls $(intermediateList) | uniq | wc -l))
	$(eval denominatorIntermediate = $(shell echo $(intermediateList) | xargs -n1 | sort -u | wc -l))
	@echo $(numeratorIntermediate) / $(denominatorIntermediate)
